(window.webpackJsonp=window.webpackJsonp||[]).push([[1372],{3368:function(t,s,a){"use strict";a.r(s);var n=a(2),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("ul",[a("li",[t._v("合成处理是将已绘制的不同图层放在一起，最终在屏幕上渲染出来的过程。在这个环节中，有两个因素可能会影响页面性能：一个是所需合成的图层数量，另一个是实现动画的相关属性。")])]),t._v(" "),a("h2",{attrs:{id:"新增图层"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#新增图层"}},[t._v("#")]),t._v(" 新增图层")]),t._v(" "),a("ul",[a("li",[t._v("在降低绘制复杂度小节中讲到，可通过将固定区域和动画区域拆分到不同图层上进行绘制，来达到绘制区域最小化的目的。接下来我们就来探讨如何创建新的图层，最佳方式便是使用 CSS 属性 "),a("code",[t._v("will-change")]),t._v(" 来创建：")])]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".nav-layer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("will-change")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" transform"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("ul",[a("li",[t._v("该方法在 Chrome、Firefox 及 Opera 上均有效，而对于 Safari 等不支持 "),a("code",[t._v("will-change")]),t._v(" 属性的浏览器，则可以使用 3D 变换来强制创建：")])]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".new-layer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("transform")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("translate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("ul",[a("li",[t._v("虽然创建新的图层能够在一定程度上减少绘制区域，但也应当注意不能创建太多的图层，因为每个图层都需要浏览器为其分配内存及管理开销。如果已经将一个元素提升到所创建的新图层上，也最好使用 Chrome 开发者工具中的 Layers 对图层详情进行评估，确定是否真的带来了性能提升，切忌在未经分析评估前就盲目地进行图层创建。")])]),t._v(" "),a("h2",{attrs:{id:"仅与合成相关的动画属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#仅与合成相关的动画属性"}},[t._v("#")]),t._v(" 仅与合成相关的动画属性")]),t._v(" "),a("ul",[a("li",[t._v("在了解了渲染过程各部分的功能和作用后，我们知道如果一个动画的实现不经过页面布局和重绘环节，仅在合成处理阶段就能完成，则将会节省大量的性能开销。目前能够符合这一要求的动画属性只有两个：透明度 "),a("code",[t._v("opacity")]),t._v(" 和图层变换 "),a("code",[t._v("transform")]),t._v("。它们所能实现的动画效果如表所示，其中用 "),a("code",[t._v("n")]),t._v(" 来表示数字。")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("动画效果")]),t._v(" "),a("th",[t._v("实现方式")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("位移")]),t._v(" "),a("td",[t._v("transform: translate(npx, npx);")])]),t._v(" "),a("tr",[a("td",[t._v("缩放")]),t._v(" "),a("td",[t._v("transform: scale(n);")])]),t._v(" "),a("tr",[a("td",[t._v("旋转")]),t._v(" "),a("td",[t._v("transform: rotate(ndeg);")])]),t._v(" "),a("tr",[a("td",[t._v("倾斜")]),t._v(" "),a("td",[t._v("transform: skew(X")])]),t._v(" "),a("tr",[a("td",[t._v("矩阵变换")]),t._v(" "),a("td",[t._v("transform: matrix(3d)(/* 矩阵变换 */);")])]),t._v(" "),a("tr",[a("td",[t._v("透明度")]),t._v(" "),a("td",[t._v("opacity: 0...1")])])])]),t._v(" "),a("ul",[a("li",[t._v("在使用 "),a("code",[t._v("opacity")]),t._v(" 和 "),a("code",[t._v("transform")]),t._v(" 实现相应的动画效果时，需要注意动画元素应当位于独立的绘图层上，以避免影响其他绘制区域。这就需要将动画元素提升至一个新的绘图层。")])])])}),[],!1,null,null,null);s.default=r.exports}}]);