(window.webpackJsonp=window.webpackJsonp||[]).push([[519],{2215:function(s,n,t){"use strict";t.r(n);var e=t(2),a=Object(e.a)({},(function(){var s=this,n=s.$createElement,t=s._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("ul",[t("li",[s._v("如果在代码中，难免会有几个会违反 eslint 校验规则的代码，这个时候我们不会去推翻 eslint 检验规则，而是使用 ESLint 配置注释来处理这种特殊的代码")]),s._v(" "),t("li",[s._v("在 根目录/demo.js")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n * 1. 假设由于业务的需求，我们允许变量定义了，可以不使用到\n * 2. 但是在 standard eslint 标准中是不支持这个格式的\n * 3. 下面使用了 eslint-disable-next-line 这个注释，表示告诉 eslint 不要去检测下一行代码\n * 4.  no-unused-vars 表示告诉 eslint 只去忽略指定的规则，其他校验还是会正常检验\n */")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// eslint-disable-next-line no-unused-vars")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("ul",[t("li",[s._v("执行: npx eslint ./demo.js")])])])}),[],!1,null,null,null);n.default=a.exports}}]);