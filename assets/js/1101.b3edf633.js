(window.webpackJsonp=window.webpackJsonp||[]).push([[1101],{2984:function(t,a,e){"use strict";e.r(a);var s=e(2),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"前话"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前话"}},[t._v("#")]),t._v(" 前话")]),t._v(" "),e("ul",[e("li",[t._v("Docker 的镜像是用一层一层的文件组成的")]),t._v(" "),e("li",[t._v("docker inspect命令可以查看镜像或者容器")]),t._v(" "),e("li",[t._v("Layers就是镜像的层文件，只读不能修改。基于镜像创建的容器会共享这些文件层")])]),t._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" inspect centos\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("h2",{attrs:{id:"编写dockerfile"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#编写dockerfile"}},[t._v("#")]),t._v(" 编写Dockerfile")]),t._v(" "),e("ul",[e("li",[t._v("-t --tag list 镜像名称")]),t._v(" "),e("li",[t._v("-f --file string 指定Dockerfile文件的位置")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("指令")]),t._v(" "),e("th",{staticStyle:{"text-align":"right"}},[t._v("含义")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("示例")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("FROM")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("构建的新镜像是基于哪个镜像")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("FROM centos:6")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("MAINTAINER")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("镜像维护者姓名或邮箱地址")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("MAINTAINER zhufengjiagou")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("RUN")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("构建镜像时运行的shell命令")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("RUN yum install httpd")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("CMD")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("CMD 设置容器启动后默认执行的命令及其参数，但 CMD 能够被 docker run 后面跟的命令行参数替换")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("CMD /usr/sbin/sshd -D")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("EXPOSE")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("声明容器运行的服务器端口")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("EXPOSE 80 443")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("ENV")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("设置容器内的环境变量")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("ENV MYSQL_ROOT_PASSWORD 123456")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("ADD")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("拷贝文件或目录到镜像中，如果是URL或者压缩包会自动下载和解压")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("ADD ,ADD "),e("a",{attrs:{href:"https://xxx.com/html.tar.gz",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://xxx.com/html.tar.gz"),e("OutboundLink")],1),t._v(" /var/www.html, ADD html.tar.gz /var/"),e("a",{attrs:{href:"http://www.html/",target:"_blank",rel:"noopener noreferrer"}},[t._v("www/html"),e("OutboundLink")],1)])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("COPY")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("拷贝文件或目录到镜像")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("COPY ./start.sh /start.sh")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("ENTRYPOINT")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("配置容器启动时运行的命令")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("ENTRYPOINT /bin/bash -c '/start.sh'")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("VOLUME")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("指定容器挂载点到宿主自动生成的目录或其它容器")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v('VOLUME ["/var/lib/mysql"]')])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("USER")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("为 RUN CMD和ENTRYPOINT执行命令指定运行用户")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("USER zhufengjiagou")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("WORKDIR")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("为RUN CMD ENTRYPOINT COPY ADD 设置工作目录")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("WORKDIR /data")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("HEALTHCHECK")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("健康检查")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("HEALTHCHECK --interval=5m --timeout=3s --retries=3 CMS curl -f htp://localhost")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("ARG")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("在构建镜像时指定一些参数")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("ARG user")])])])]),t._v(" "),e("ul",[e("li",[t._v('cmd给出的是一个容器的默认的可执行体。也就是容器启动以后，默认的执行的命令。重点就是这个"默认"。意味着，如果'),e("code",[t._v("docker run")]),t._v("没有指定任何的执行命令或者"),e("code",[t._v("dockerfile")]),t._v("里面也没有"),e("code",[t._v("entrypoint")]),t._v("，那么，就会使用cmd指定的默认的执行命令执行。同时也从侧面说明了"),e("code",[t._v("entrypoint")]),t._v("的含义，它才是真正的容器启动以后要执行命令")])]),t._v(" "),e("h2",{attrs:{id:"dockerignore"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dockerignore"}},[t._v("#")]),t._v(" .dockerignore")]),t._v(" "),e("p",[t._v("表示要排除，不要打包到image中的文件路径")]),t._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v(".git\nnode_modules\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("h2",{attrs:{id:"dockerfile"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile"}},[t._v("#")]),t._v(" Dockerfile")]),t._v(" "),e("h3",{attrs:{id:"安装node"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装node"}},[t._v("#")]),t._v(" 安装node")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/creationix/nvm/blob/master/README.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("nvm"),e("OutboundLink")],1)])]),t._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" /root/.bashrc\nnvm "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" stable\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("node")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-v")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i cnpm "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-g")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i nrm "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-g")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("h3",{attrs:{id:"安装express项目生成器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装express项目生成器"}},[t._v("#")]),t._v(" 安装express项目生成器")]),t._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" express-generator "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-g")]),t._v("\nexpress app\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("h3",{attrs:{id:"dockerfile-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile-2"}},[t._v("#")]),t._v(" Dockerfile")]),t._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("FROM "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("node")]),t._v("\nCOPY ./app /app\nWORKDIR /app\nRUN "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\nEXPOSE "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("ul",[e("li",[t._v("FROM 表示该镜像继承的镜像 :表示标签")]),t._v(" "),e("li",[t._v("COPY 是将当前目录下的app目录下面的文件都拷贝到image里的/app目录中")]),t._v(" "),e("li",[t._v("WORKDIR 指定工作路径，类似于执行 "),e("code",[t._v("cd")]),t._v(" 命令")]),t._v(" "),e("li",[t._v("RUN npm install 在/app目录下安装依赖，安装后的依赖也会打包到image目录中")]),t._v(" "),e("li",[t._v("EXPOSE 暴露3000端口，允许外部连接这个端口")])]),t._v(" "),e("h2",{attrs:{id:"创建image"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建image"}},[t._v("#")]),t._v(" 创建image")]),t._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" build "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-t")]),t._v(" express-demo "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("ul",[e("li",[t._v("-t用来指定image镜像的名称，后面还可以加冒号指定标签，如果不指定默认就是latest")]),t._v(" "),e("li",[e("code",[t._v(".")]),t._v(" 表示Dockerfile文件的所有路径,"),e("code",[t._v(".")]),t._v("就表示当前路径")])]),t._v(" "),e("h2",{attrs:{id:"使用新的镜像运行容器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用新的镜像运行容器"}},[t._v("#")]),t._v(" 使用新的镜像运行容器")]),t._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" container run "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3333")]),t._v(":3000 "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-it")]),t._v(" express-demo /bin/bash\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" start\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("ul",[e("li",[e("code",[t._v("-p")]),t._v(" 参数是将容器的3000端口映射为本机的3333端口")]),t._v(" "),e("li",[e("code",[t._v("-it")]),t._v(" 参数是将容器的shell容器映射为当前的shell,在本机容器中执行的命令都会发送到容器当中执行")]),t._v(" "),e("li",[e("code",[t._v("express-demo")]),t._v(" image的名称")]),t._v(" "),e("li",[t._v("/bin/bash 容器启动后执行的第一个命令,这里是启动了bash容器以便执行脚本")]),t._v(" "),e("li",[e("code",[t._v("--rm")]),t._v(" 在容器终止运行后自动删除容器文件")])]),t._v(" "),e("h2",{attrs:{id:"cmd"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cmd"}},[t._v("#")]),t._v(" CMD")]),t._v(" "),e("p",[t._v("Dockerfile")]),t._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("+ CMD "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" start\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("重新制作镜像")]),t._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" build "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-t")]),t._v(" express-demo "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("ul",[e("li",[t._v("RUN命令在 image 文件的构建阶段执行，执行结果都会打包进入 image 文件；CMD命令则是在容器启动后执行")]),t._v(" "),e("li",[t._v("一个 Dockerfile 可以包含多个RUN命令，但是只能有一个CMD命令")]),t._v(" "),e("li",[t._v("指定了CMD命令以后，docker container run命令就不能附加命令了（比如前面的/bin/bash），否则它会覆盖CMD命令")])]),t._v(" "),e("h2",{attrs:{id:"发布image"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#发布image"}},[t._v("#")]),t._v(" 发布image")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://hub.docker.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("注册账户"),e("OutboundLink")],1)]),t._v(" "),e("li",[t._v("docker tag SOURCE_IMAGE[:TAG] TARGET_IMAGE[:TAG]")])]),t._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" login\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" image tag "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("imageName"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("username"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("/"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("repository"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(":"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("tag"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" image build "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-t")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("username"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("/"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("repository"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(":"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("tag"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" tag express-demo zhangrenyang/express-demo:v1\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" push zhangrenyang/express-demo:v1\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])])])}),[],!1,null,null,null);a.default=n.exports}}]);