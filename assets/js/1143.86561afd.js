(window.webpackJsonp=window.webpackJsonp||[]).push([[1143],{3027:function(t,e,s){"use strict";s.r(e);var n=s(2),d=Object(n.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"objectid构成"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#objectid构成"}},[t._v("#")]),t._v(" ObjectId构成")]),t._v(" "),s("p",[t._v("之前我们使用MySQL等关系型数据库时，主键都是设置成自增的。但在分布式环境下，这种方法就不可行了，会产生冲突。为此，MongoDB采用了一个称之为ObjectId的类型来做主键。ObjectId是一个12字节的 BSON 类型字符串。按照字节顺序，一次代表：")]),t._v(" "),s("ul",[s("li",[t._v("4字节：UNIX时间戳")]),t._v(" "),s("li",[t._v("3字节：表示运行MongoDB的机器")]),t._v(" "),s("li",[t._v("2字节：表示生成此_id的进程")]),t._v(" "),s("li",[t._v("3字节：由一个随机数开始的计数器生成的值")])]),t._v(" "),s("h2",{attrs:{id:"mongodb启动命令mongod参数说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mongodb启动命令mongod参数说明"}},[t._v("#")]),t._v(" Mongodb启动命令mongod参数说明")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("选项")]),t._v(" "),s("th",[t._v("含义")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("--port")]),t._v(" "),s("td",[t._v("指定服务端口号，默认端口27017")])]),t._v(" "),s("tr",[s("td",[t._v("--logpath")]),t._v(" "),s("td",[t._v("指定MongoDB日志文件，注意是指定文件不是目录")])]),t._v(" "),s("tr",[s("td",[t._v("--logappend")]),t._v(" "),s("td",[t._v("使用追加的方式写日志")])]),t._v(" "),s("tr",[s("td",[t._v("--dbpath")]),t._v(" "),s("td",[t._v("指定数据库路径")])]),t._v(" "),s("tr",[s("td",[t._v("--directoryperdb")]),t._v(" "),s("td",[t._v("设置每个数据库将被保存在一个单独的目录")])])])]),t._v(" "),s("h2",{attrs:{id:"集合命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#集合命令"}},[t._v("#")]),t._v(" 集合命令")]),t._v(" "),s("ul",[s("li",[t._v("db.students.help();")]),t._v(" "),s("li",[t._v("DBCollection help")]),t._v(" "),s("li",[t._v("db.students.find().help() - show DBCursor help 显示游标帮助")]),t._v(" "),s("li",[t._v("db.students.count() 显示条数")]),t._v(" "),s("li",[t._v("db.students.copyTo(newColl) - duplicates collection by copying all docum ents to newColl; no indexes are copied. 把一个旧集合拷贝到一个新的集合，不拷贝索引")]),t._v(" "),s("li",[t._v("db.students.convertToCapped(maxBytes) - calls {convertToCapped:'students ', size:maxBytes}} command")]),t._v(" "),s("li",[t._v("db.students.dataSize() 数据大小")]),t._v(" "),s("li",[t._v("db.students.distinct( key ) - e.g. db.students.distinct( 'x' ) 统计唯一的key的数量")]),t._v(" "),s("li",[t._v("db.students.drop() drop the collection ，删除集合")]),t._v(" "),s("li",[t._v('db.students.dropIndex(index) - e.g. db.students.dropIndex( "indexName" ) 删除索引 or db.students.dropIndex( { "indexKey" : 1 } )')]),t._v(" "),s("li",[t._v("db.students.dropIndexes() 删除 所有的索引")]),t._v(" "),s("li",[t._v("db.students.ensureIndex(keypattern[,options]) - options is an object wit h these possible fields: name, unique, dropDups 添加索引")]),t._v(" "),s("li",[t._v("db.students.reIndex()")]),t._v(" "),s("li",[t._v("db.students.find([query],[fields]) - query is an optional query filter. fields is optional set of fields to return. 查找文档")])]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("  e.g. db.students.find"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("x:77"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" , "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name:1, x:1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("ul",[s("li",[t._v("db.students.find(...).count() 数量")]),t._v(" "),s("li",[t._v("db.students.find(...).limit(n) 限制返回的条数")]),t._v(" "),s("li",[t._v("db.students.find(...).skip(n) 设置跳过的条数")]),t._v(" "),s("li",[t._v("db.students.find(...).sort(...) 排序")]),t._v(" "),s("li",[t._v("db.students.findOne([query]) 查找一条")]),t._v(" "),s("li",[t._v("db.students.findAndModify( { update : ... , remove : bool [, query: {}, sort: {}, 'new': false] } ) 查找并且修改 更新后的值，是否删除，查询条件 排序 是否返回新值")]),t._v(" "),s("li",[t._v("db.students.getDB() get DB object associated with collection 获得DB")]),t._v(" "),s("li",[t._v("db.students.getPlanCache() get query plan cache associated with collecti on")]),t._v(" "),s("li",[t._v("db.students.getIndexes() 获取索引")]),t._v(" "),s("li",[t._v("db.students.group( { key : ..., initial: ..., reduce : ...[, cond: ...] } ) 分组统计")]),t._v(" "),s("li",[t._v("db.students.insert(obj) 插入文档")]),t._v(" "),s("li",[t._v("db.students.mapReduce( mapFunction , reduceFunction , ) 统计")]),t._v(" "),s("li",[t._v("db.students.aggregate( [pipeline], ) - performs an agg regation on a collection; returns a cursor 聚合")]),t._v(" "),s("li",[t._v("db.students.remove(query) 删除")]),t._v(" "),s("li",[t._v("db.students.renameCollection( newName , ) renames the colle ction. 重命名集合")]),t._v(" "),s("li",[t._v("db.students.runCommand( name , ) runs a db command with the gi ven name where the first param is the collection name")]),t._v(" "),s("li",[t._v("db.students.save(obj) 保存对象")]),t._v(" "),s("li",[t._v("db.students.stats() 统计信息")]),t._v(" "),s("li",[t._v("db.students.storageSize() - includes free space allocated to this collec tion")]),t._v(" "),s("li",[t._v("db.students.totalIndexSize() - size in bytes of all the indexes")]),t._v(" "),s("li",[t._v("db.students.totalSize() - storage allocated for all data and indexes")]),t._v(" "),s("li",[t._v("db.students.update(query, object[, upsert_bool, multi_bool]) - instead o f two flags, you can pass an object with fields: upsert, multi 更新")]),t._v(" "),s("li",[t._v("db.students.validate( ) - SLOW")]),t._v(" "),s("li",[t._v("db.students.getShardVersion() - only for use with sharding")]),t._v(" "),s("li",[t._v("db.students.getShardDistribution() - prints statistics about data distri bution in the cluster")]),t._v(" "),s("li",[t._v("db.students.getSplitKeysForChunks( ) - calculates split p oints over all chunks and returns splitter function")]),t._v(" "),s("li",[t._v("db.students.getWriteConcern() - returns the write concern used for any o perations on this collection, inherited from server/db if set")]),t._v(" "),s("li",[t._v("db.students.setWriteConcern( ) - sets the write conc ern for writes to the collection")]),t._v(" "),s("li",[t._v("db.students.unsetWriteConcern( ) - unsets the write concern for writes to the collection")])])])}),[],!1,null,null,null);e.default=d.exports}}]);