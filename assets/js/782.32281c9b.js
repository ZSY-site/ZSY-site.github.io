(window.webpackJsonp=window.webpackJsonp||[]).push([[782],{2555:function(t,r,e){"use strict";e.r(r);var s=e(2),i=Object(s.a)({},(function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[e("a",{attrs:{href:"https://promisesaplus.cn/",target:"_blank",rel:"noopener noreferrer"}},[t._v("promise规范"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"面试题汇总"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#面试题汇总"}},[t._v("#")]),t._v(" 面试题汇总")]),t._v(" "),e("h3",{attrs:{id:"谈谈你对promise的理解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#谈谈你对promise的理解"}},[t._v("#")]),t._v(" 谈谈你对promise的理解")]),t._v(" "),e("ul",[e("li",[t._v("是什么？\n"),e("ul",[e("li",[e("ol",[e("li",[t._v("Promise是JS中进行异步编程的新解决方案(旧的是谁?)。promise解决可以回调地狱问题")])])]),t._v(" "),e("li",[e("ol",{attrs:{start:"2"}},[e("li",[t._v("使用promise.all 能将多个异步请求合并在一起，同步最终的结果。")])])]),t._v(" "),e("li",[e("p",[t._v("promise的特点")]),t._v(" "),e("ul",[e("li",[e("ol",[e("li",[t._v("promise的三种状态：成功态(resolve) 失败态(reject) 等待态/既不成功也不失败(pedding), 用户自己决定是成功还是失败，成功的原因和失败的原因也是用户自定义的")])])]),t._v(" "),e("li",[e("ol",{attrs:{start:"2"}},[e("li",[t._v("Promise中的执行器函数excutor是立即执行的")])])]),t._v(" "),e("li",[e("ol",{attrs:{start:"3"}},[e("li",[t._v("promise的实例都拥有一个then方法，其中一个参数是成功的回调，另一个参数是失败的回调。如果promise成功了，就会调用成功的回调，如果promise失败了，就会调用失败的回调")])])]),t._v(" "),e("li",[e("ol",{attrs:{start:"4"}},[e("li",[t._v("如果promise一旦成功就不能失败，一旦失败就不能成功")])])])])])])])])])}),[],!1,null,null,null);r.default=i.exports}}]);