(window.webpackJsonp=window.webpackJsonp||[]).push([[136],{1191:function(s,t,a){s.exports=a.p+"assets/img/23.09b81828.png"},1192:function(s,t,a){s.exports=a.p+"assets/img/24.c0b63895.png"},1193:function(s,t,a){s.exports=a.p+"assets/img/25.40dd2010.png"},1194:function(s,t,a){s.exports=a.p+"assets/img/26.37efaf1b.png"},2732:function(s,t,a){"use strict";a.r(t);var n=a(2),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"前话"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#前话"}},[s._v("#")]),s._v(" 前话")]),s._v(" "),n("ul",[n("li",[s._v("前面我们知道 MySQL 不支持 SQL92 的外连接的写法, 那么我们下面就来学习下使用 SQL99 实现外连接。")]),s._v(" "),n("li",[s._v("SQL99 语法中使用 JOIN...ON 的方式实现多表的查询，这种方式可以解决外连接的问题，同时 MYSQL 也是支持这种方式的")])]),s._v(" "),n("h2",{attrs:{id:"内连接-inner-join-的实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#内连接-inner-join-的实现"}},[s._v("#")]),s._v(" 内连接(INNER JOIN)的实现")]),s._v(" "),n("ul",[n("li",[s._v("题目 1：")])]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("employee_id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("last_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("department_id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\nd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("department_id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("location_id\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" employees e "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("JOIN")]),s._v(" departments d\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("department_id "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("department_id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[n("img",{attrs:{src:a(1191),alt:""}})]),s._v(" "),n("ul",[n("li",[s._v("题目 2：")])]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("JOIN")]),s._v(" departments d\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("department_id "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("department_id\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("JOIN")]),s._v(" locations l\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("location_id "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("location_id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[n("img",{attrs:{src:a(1192),alt:""}})]),s._v(" "),n("h2",{attrs:{id:"外连接-outer-join-的实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#外连接-outer-join-的实现"}},[s._v("#")]),s._v(" 外连接(OUTER JOIN)的实现")]),s._v(" "),n("h3",{attrs:{id:"左外连接-left-outer-join"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#左外连接-left-outer-join"}},[s._v("#")]),s._v(" 左外连接(LEFT OUTER JOIN)")]),s._v(" "),n("ul",[n("li",[s._v("语法：")])]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#实现查询结果是A")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" 字段列表\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" A表 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LEFT")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("JOIN")]),s._v(" B表\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" 关联条件\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" 等其他子句"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("ul",[n("li",[s._v("举例：")])]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("last_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("department_id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("department_name\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" employees e\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LEFT")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("OUTER")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("JOIN")]),s._v(" departments d\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("department_id "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("department_id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[n("img",{attrs:{src:a(1193),alt:""}})]),s._v(" "),n("h3",{attrs:{id:"右外连接-right-outer-join"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#右外连接-right-outer-join"}},[s._v("#")]),s._v(" 右外连接(RIGHT OUTER JOIN)")]),s._v(" "),n("ul",[n("li",[s._v("语法：")])]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" A表 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RIGHT")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("JOIN")]),s._v(" B表\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" 关联条件\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" 等其他子句"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("ul",[n("li",[s._v("举例：")])]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("last_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("department_id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("department_name\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" employees e\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RIGHT")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("OUTER")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("JOIN")]),s._v(" departments d\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("department_id "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("department_id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[n("img",{attrs:{src:a(1194),alt:""}})]),s._v(" "),n("blockquote",[n("p",[s._v("需要注意的是，LEFT JOIN 和 RIGHT JOIN 只存在于 SQL99 及以后的标准中，在 SQL92 中不存在，\n只能用 (+) 表示。")])]),s._v(" "),n("h3",{attrs:{id:"满外连接-full-outer-join"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#满外连接-full-outer-join"}},[s._v("#")]),s._v(" 满外连接(FULL OUTER JOIN)")]),s._v(" "),n("p",[s._v("满外连接的结果 = 左右表匹配的数据 + 左表没有匹配到的数据 + 右表没有匹配到的数据。\nSQL99 是支持满外连接的。使用 FULL JOIN 或 FULL OUTER JOIN 来实现。\n需要注意的是，MySQL 不支持 FULL JOIN，但是可以用 LEFT JOIN UNION RIGHT join 代替。")])])}),[],!1,null,null,null);t.default=e.exports}}]);