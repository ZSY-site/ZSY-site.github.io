(window.webpackJsonp=window.webpackJsonp||[]).push([[667],{2424:function(t,s,a){"use strict";a.r(s);var e=a(2),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"conventional-commits"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#conventional-commits"}},[t._v("#")]),t._v(" Conventional Commits")]),t._v(" "),a("ul",[a("li",[t._v("规范化的 git commit 可以提高 git log 可读性，生成格式良好的 changelog")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.conventionalcommits.org/zh-hans/v1.0.0/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Conventional Commits"),a("OutboundLink")],1),t._v(" 是一种用于给提交信息增加人机可读含义的规范")]),t._v(" "),a("li",[t._v("它提供了一组简单规则来创建清晰的提交历史")]),t._v(" "),a("li",[t._v("通过在提交信息中描述功能、修复和破坏性变更，使这种惯例与 semver 相互对应")])]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("类型"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("可选 范围"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("描述"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("可选 正文"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("可选 脚注"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("h2",{attrs:{id:"类型-type"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类型-type"}},[t._v("#")]),t._v(" 类型（type）")]),t._v(" "),a("ul",[a("li",[t._v("feat: 类型 为 feat 的提交表示在代码库中新增了一个功能（这和语义化版本中的 MINOR 相对应）")]),t._v(" "),a("li",[t._v("fix: 类型 为 fix 的提交表示在代码库中修复了一个 bug（这和语义化版本中的 PATCH 相对应）")]),t._v(" "),a("li",[t._v("docs: 只是更改文档")]),t._v(" "),a("li",[t._v("style: 不影响代码含义的变化（空白、格式化、缺少分号等）")]),t._v(" "),a("li",[t._v("refactor: 代码重构，既不修复错误也不添加功能")]),t._v(" "),a("li",[t._v("perf: 改进性能的代码更改")]),t._v(" "),a("li",[t._v("test: 添加确实测试或更正现有的测试")]),t._v(" "),a("li",[t._v("build: 影响构建系统或外部依赖关系的更改（示例范围：gulp、broccoli、NPM）")]),t._v(" "),a("li",[t._v("ci: 更改持续集成文件和脚本（示例范围：Travis、Circle、BrowserStack、SauceLabs）")]),t._v(" "),a("li",[t._v("chore: 其他不修改 src 或 test 文件。")]),t._v(" "),a("li",[t._v("revert: commit 回退")])]),t._v(" "),a("h2",{attrs:{id:"范围-scope"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#范围-scope"}},[t._v("#")]),t._v(" 范围（scope）")]),t._v(" "),a("ul",[a("li",[t._v("可以为提交类型添加一个围在圆括号内的作用域，以为其提供额外的上下文信息")])])])}),[],!1,null,null,null);s.default=n.exports}}]);