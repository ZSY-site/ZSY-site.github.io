(window.webpackJsonp=window.webpackJsonp||[]).push([[914],{2768:function(t,e,a){"use strict";a.r(e);var o=a(2),s=Object(o.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现"}},[t._v("#")]),t._v(" 实现")]),t._v(" "),a("p",[t._v("详见代码")]),t._v(" "),a("h2",{attrs:{id:"注意"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意"}},[t._v("#")]),t._v(" 注意")]),t._v(" "),a("p",[t._v("使用 JWT 实现单点登录时，需要注意 token 时效性。token 是保存在客户端的令牌数据，\n如果永久有效，则有被劫持的可能。token 在设计的时候，可以考虑一次性有效或一段时间\n内有效。如果设置有效时长，则需要考虑是否需要刷新 token 有效期问题。")]),t._v(" "),a("h2",{attrs:{id:"token-保存位置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#token-保存位置"}},[t._v("#")]),t._v(" token 保存位置")]),t._v(" "),a("p",[t._v("使用 JWT 技术生成的 token，客户端在保存的时候可以考虑 cookie 或 localStorage。cookie\n保存方式，可以实现跨域传递数据。localStorage 是域私有的本地存储，无法实现跨域。")]),t._v(" "),a("h2",{attrs:{id:"webstorage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webstorage"}},[t._v("#")]),t._v(" webstorage")]),t._v(" "),a("p",[t._v("webstorage 可保存的数据容量为 5M。且只能存储字符串数据。\nwebstorage 分为 localStorage 和 sessionStorage。\nlocalStorage 的生命周期是永久的，关闭页面或浏览器之后 localStorage 中的数据也不会\n消失。localStorage 除非主动删除数据，否则数据永远不会消失。\nsessionStorage 是会话相关的本地存储单元，生命周期是在仅在当前会话下有效。\nsessionStorage 引入了一个“浏览器窗口”的概念，sessionStorage 是在同源的窗口中始终存在\n的数据。只要这个浏览器窗口没有关闭，即使刷新页面或者进入同源另一个页面，数据依然\n存在。但是 sessionStorage 在关闭了浏览器窗口后就会被销毁。同时独立的打开同一个窗口\n同一个页面，sessionStorage 也是不一样的。")])])}),[],!1,null,null,null);e.default=s.exports}}]);