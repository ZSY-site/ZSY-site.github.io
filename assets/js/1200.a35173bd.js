(window.webpackJsonp=window.webpackJsonp||[]).push([[1200],{3113:function(t,s,a){"use strict";a.r(s);var e=a(2),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"前话"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前话"}},[t._v("#")]),t._v(" 前话")]),t._v(" "),a("ul",[a("li",[t._v("useRequest 是一个强大的异步数据管理的 Hooks，React 项目中的网络请求场景使用 useRequest 就够了")]),t._v(" "),a("li",[t._v("useRequest 通过插件式组织代码，核心代码极其简单，并且可以很方便的扩展出更高级的功能。目前已有能力包括：\n"),a("ul",[a("li",[t._v("自动请求/手动请求")]),t._v(" "),a("li",[t._v("轮询")]),t._v(" "),a("li",[t._v("防抖")]),t._v(" "),a("li",[t._v("节流")]),t._v(" "),a("li",[t._v("屏幕聚焦重新请求")]),t._v(" "),a("li",[t._v("错误重试")]),t._v(" "),a("li",[t._v("loading delay")]),t._v(" "),a("li",[t._v("SWR(stale-while-revalidate)重新请求的同时使用过期数据")]),t._v(" "),a("li",[t._v("缓存")])])])]),t._v(" "),a("h2",{attrs:{id:"api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api"}},[t._v("#")]),t._v(" API")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  loading"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  run"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  runAsync"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  refresh"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  refreshAsync"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  mutate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  cancel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("useRequest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("service"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  manual"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  defaultParams"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  onBefore"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  onSuccess"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  onError"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  onFinally"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br")])]),a("h2",{attrs:{id:"结果"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结果"}},[t._v("#")]),t._v(" 结果")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("参数")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("data")]),t._v(" "),a("td",[t._v("service 返回的数据")])]),t._v(" "),a("tr",[a("td",[t._v("error")]),t._v(" "),a("td",[t._v("service 抛出的异常")])]),t._v(" "),a("tr",[a("td",[t._v("loading")]),t._v(" "),a("td",[t._v("service 是否正在执行")])]),t._v(" "),a("tr",[a("td",[t._v("params")]),t._v(" "),a("td",[t._v("当次执行的 service 的参数数组")])]),t._v(" "),a("tr",[a("td",[t._v("run")]),t._v(" "),a("td",[t._v("手动触发 service 执行")])]),t._v(" "),a("tr",[a("td",[t._v("runAsync")]),t._v(" "),a("td",[t._v("与 run 用法一致，但返回的是 Promise，需要自行处理异常")])]),t._v(" "),a("tr",[a("td",[t._v("refresh")]),t._v(" "),a("td",[t._v("使用上一次的 params，重新调用 run")])]),t._v(" "),a("tr",[a("td",[t._v("refreshAsync")]),t._v(" "),a("td",[t._v("使用上一次的 params，重新调用 runAsync")])]),t._v(" "),a("tr",[a("td",[t._v("mutate")]),t._v(" "),a("td",[t._v("直接修改 data")])]),t._v(" "),a("tr",[a("td",[t._v("cancel")]),t._v(" "),a("td",[t._v("取消当前正在进行的请求")])])])]),t._v(" "),a("h2",{attrs:{id:"选项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#选项"}},[t._v("#")]),t._v(" 选项")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("参数")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("manual")]),t._v(" "),a("td",[t._v("默认 false。 即在初始化时自动执行 service")])]),t._v(" "),a("tr",[a("td",[t._v("defaultParams")]),t._v(" "),a("td",[t._v("首次默认执行时，传递给 service 的参数")])]),t._v(" "),a("tr",[a("td",[t._v("onBefore")]),t._v(" "),a("td",[t._v("service 执行前触发")])]),t._v(" "),a("tr",[a("td",[t._v("onSuccess")]),t._v(" "),a("td",[t._v("service resolve 时触发")])]),t._v(" "),a("tr",[a("td",[t._v("onError")]),t._v(" "),a("td",[t._v("service reject 时触发")])]),t._v(" "),a("tr",[a("td",[t._v("onFinally")]),t._v(" "),a("td",[t._v("service 执行完成时触发")])])])]),t._v(" "),a("h2",{attrs:{id:"安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("create-react-app demo\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" ahooks  "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--save")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" start\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("h2",{attrs:{id:"依赖-hooks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#依赖-hooks"}},[t._v("#")]),t._v(" 依赖 Hooks")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://ahooks.js.org/zh-CN/hooks/use-request/index",target:"_blank",rel:"noopener noreferrer"}},[t._v("useRequest"),a("OutboundLink")],1),t._v(" 是一个强大的异步数据管理的 Hooks，React 项目中的网络请求场景使用 useRequest 就够了")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://ahooks.js.org/zh-CN/hooks/use-update-effect/",target:"_blank",rel:"noopener noreferrer"}},[t._v("useUpdateEffect"),a("OutboundLink")],1),t._v(" 用法等同于 useEffect，但是会忽略首次执行，只在依赖更新时执行")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://ahooks.js.org/zh-CN/hooks/use-creation",target:"_blank",rel:"noopener noreferrer"}},[t._v("useCreation"),a("OutboundLink")],1),t._v(" 是 useMemo 或 useRef 的替代品")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://ahooks.js.org/zh-CN/hooks/use-latest",target:"_blank",rel:"noopener noreferrer"}},[t._v("useLatest"),a("OutboundLink")],1),t._v(" 返回当前最新值的 Hook，可以避免闭包问题")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://ahooks.js.org/zh-CN/hooks/use-memoized-fn",target:"_blank",rel:"noopener noreferrer"}},[t._v("useMemoizedFn"),a("OutboundLink")],1),t._v(" 是持久化 function 的 Hook，理论上，可以使用 useMemoizedFn 完全代替 useCallback")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://ahooks.js.org/zh-CN/hooks/use-mount",target:"_blank",rel:"noopener noreferrer"}},[t._v("useMount"),a("OutboundLink")],1),t._v(" 是只在组件初始化时执行的 Hook")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://ahooks.js.org/zh-CN/hooks/use-unmount",target:"_blank",rel:"noopener noreferrer"}},[t._v("useUnmount"),a("OutboundLink")],1),t._v(" 是在组件卸载（unmount）时执行的 Hook。")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://ahooks.js.org/zh-CN/hooks/use-update",target:"_blank",rel:"noopener noreferrer"}},[t._v("useUpdate"),a("OutboundLink")],1),t._v(" 会返回一个函数，调用该函数会强制组件重新渲染")])])])}),[],!1,null,null,null);s.default=n.exports}}]);