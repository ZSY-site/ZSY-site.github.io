(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{1e3:function(t,r,e){t.exports=e.p+"assets/img/108.ab41c856.png"},1001:function(t,r,e){t.exports=e.p+"assets/img/109.99b54769.png"},1002:function(t,r,e){t.exports=e.p+"assets/img/110.2283dfbc.png"},1003:function(t,r,e){t.exports=e.p+"assets/img/111.01a3aa95.png"},1004:function(t,r,e){t.exports=e.p+"assets/img/112.a9ee549c.png"},1005:function(t,r,e){t.exports=e.p+"assets/img/113.d3432ba0.png"},1006:function(t,r,e){t.exports=e.p+"assets/img/114.768c3eaa.png"},1007:function(t,r,e){t.exports=e.p+"assets/img/115.ddf5215f.png"},2702:function(t,r,e){"use strict";e.r(r);var n=e(2),s=Object(n.a)({},(function(){var t=this,r=t.$createElement,n=t._self._c||r;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"坑-容器卷记得加入"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#坑-容器卷记得加入"}},[t._v("#")]),t._v(" 坑：容器卷记得加入")]),t._v(" "),n("p",[t._v("·--privileged=true\n·why\n Docker 挂载主机目录访问如果出现 cannot open directory .: Permission denied\n解决办法：在挂载目录后多加一个--privileged=true 参数即可")]),t._v(" "),n("p",[t._v("如果是 CentOS7 安全模块会比之前系统版本加强，不安全的会先禁止，所以目录挂载的情况被默认为不安全的行为，\n在 SELinux 里面挂载目录被禁止掉了额，如果要开启，我们一般使用--privileged=true 命令，扩大容器的权限解决挂载目录没有权限的问题，也即\n使用该参数，container 内的 root 拥有真正的 root 权限，否则，container 内的 root 只是外部的一个普通用户权限。")]),t._v(" "),n("h2",{attrs:{id:"回顾下上一讲的知识点-参数-v"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#回顾下上一讲的知识点-参数-v"}},[t._v("#")]),t._v(" 回顾下上一讲的知识点，参数 V")]),t._v(" "),n("p",[t._v("还记得蓝色框框中的内容吗?\n"),n("img",{attrs:{src:e(998),alt:""}})]),t._v(" "),n("h2",{attrs:{id:"是什么"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#是什么"}},[t._v("#")]),t._v(" 是什么")]),t._v(" "),n("p",[t._v("卷就是目录或文件，存在于一个或多个容器中，由 docker 挂载到容器，但不属于联合文件系统，因此能够绕过 Union File System 提供一些用于持续存储或共享数据的特性：\n卷的设计目的就是数据的持久化，完全独立于容器的生存周期，因此 Docker 不会在容器删除时删除其挂载的数据卷\n·一句话：有点类似我们 Redis 里面的 rdb 和 aof 文件\n·将 docker 容器内的数据保存进宿主机的磁盘中\n·运行一个带有容器卷存储功能的容器实例\n· docker run -it --privileged=true -v /宿主机绝对路径目录:/容器内目录 镜像名")]),t._v(" "),n("h2",{attrs:{id:"能干嘛"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#能干嘛"}},[t._v("#")]),t._v(" 能干嘛")]),t._v(" "),n("p",[t._v("*  将运用与运行的环境打包镜像，run 后形成容器实例运行 ，但是我们对数据的要求希望是持久化的")]),t._v(" "),n("p",[t._v("Docker 容器产生的数据，如果不备份，那么当容器实例删除后，容器内的数据自然也就没有了。\n为了能保存数据在 docker 中我们使用卷。")]),t._v(" "),n("p",[t._v("特点：\n1：数据卷可在容器之间共享或重用数据\n2：卷中的更改可以直接实时生效，爽\n3：数据卷中的更改不会包含在镜像的更新中\n4：数据卷的生命周期一直持续到没有容器使用它为止")]),t._v(" "),n("h2",{attrs:{id:"数据卷案例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数据卷案例"}},[t._v("#")]),t._v(" 数据卷案例")]),t._v(" "),n("p",[t._v("·宿主 vs 容器之间映射添加容器卷\n·直接命令添加\n·命令\n  公式：docker run -it -v /宿主机目录:/容器内目录 ubuntu /bin/bash")]),t._v(" "),n("p",[t._v("docker run -it --name myu3 --privileged=true -v /tmp/myHostData:/tmp/myDockerData ubuntu /bin/bash\n"),n("img",{attrs:{src:e(999),alt:""}}),t._v("\n· docker run -it --privileged=true -v /宿主机绝对路径目录:/容器内目录 镜像名\n·查看数据卷是否挂载成功\ndocker inspect 容器 ID")]),t._v(" "),n("p",[n("img",{attrs:{src:e(1e3),alt:""}})]),t._v(" "),n("p",[t._v("·容器和宿主机之间数据共享\n1  docker 修改，主机同步获得  \n2 主机修改，docker 同步获得\n3 docker 容器 stop，主机修改，docker 容器重启看数据是否同步。")]),t._v(" "),n("p",[n("img",{attrs:{src:e(1001),alt:""}}),t._v("\n·读写规则映射添加说明\n·读写(默认)\n"),n("img",{attrs:{src:e(1002),alt:""}}),t._v("\n rw = read + write\n"),n("img",{attrs:{src:e(1003),alt:""}}),t._v("\n· docker run -it --privileged=true -v /宿主机绝对路径目录:/容器内目录:rw 镜像名\n·默认同上案例，默认就是 rw\n·只读\n·容器实例内部被限制，只能读取不能写")]),t._v(" "),n("p",[n("img",{attrs:{src:e(1004),alt:""}}),t._v("\n /容器目录:ro 镜像名                就能完成功能，此时容器自己只能读取不能写")]),t._v(" "),n("p",[t._v("ro = read only")]),t._v(" "),n("p",[t._v("此时如果宿主机写入内容，可以同步给容器内，容器可以读取到。\n· docker run -it --privileged=true -v /宿主机绝对路径目录:/容器内目录:ro 镜像名\n·卷的继承和共享\n·容器 1 完成和宿主机的映射")]),t._v(" "),n("p",[t._v("docker run -it  --privileged=true -v /mydocker/u:/tmp --name u1 ubuntu")]),t._v(" "),n("p",[n("img",{attrs:{src:e(1005),alt:""}})]),t._v(" "),n("p",[n("img",{attrs:{src:e(1006),alt:""}}),t._v("\n·容器 2 继承容器 1 的卷规则")]),t._v(" "),n("p",[n("img",{attrs:{src:e(1007),alt:""}}),t._v("\n·docker run -it --privileged=true --volumes-from 父类 --name u2 ubuntu")])])}),[],!1,null,null,null);r.default=s.exports},998:function(t,r,e){t.exports=e.p+"assets/img/106.b6609d7c.png"},999:function(t,r,e){t.exports=e.p+"assets/img/107.dc96472a.png"}}]);