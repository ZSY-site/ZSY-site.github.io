(window.webpackJsonp=window.webpackJsonp||[]).push([[316],{2485:function(t,s,a){"use strict";a.r(s);var r=a(2),v=Object(r.a)({},(function(){var t=this,s=t.$createElement,r=t._self._c||s;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"mobx"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#mobx"}},[t._v("#")]),t._v(" mobx")]),t._v(" "),r("p",[t._v("mobx是一个简单可扩展的状态管理库")]),t._v(" "),r("h2",{attrs:{id:"mobx-vs-redux"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#mobx-vs-redux"}},[t._v("#")]),t._v(" mobx vs redux")]),t._v(" "),r("p",[t._v("mobx学习成本更低，性能更好的的状态解决方案")]),t._v(" "),r("ul",[r("li",[t._v("开发难度低")]),t._v(" "),r("li",[t._v("开发代码量少")]),t._v(" "),r("li",[t._v("渲染性能好")])]),t._v(" "),r("h2",{attrs:{id:"核心思想"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#核心思想"}},[t._v("#")]),t._v(" 核心思想")]),t._v(" "),r("p",[t._v("状态变化引起的副作用应该被自动触发")]),t._v(" "),r("ul",[r("li",[t._v("应用逻辑只需要修改状态数据即可,mobx回自动渲染UI，无需人工干预")]),t._v(" "),r("li",[t._v("数据变化只会渲染对应的组件")]),t._v(" "),r("li",[t._v("MobX提供机制来存储和更新应用状态供 React 使用")]),t._v(" "),r("li",[t._v("react 通过提供机制把应用状态转换为可渲染组件树并对其进行渲染")])]),t._v(" "),r("p",[r("img",{attrs:{src:a(817),alt:""}})])])}),[],!1,null,null,null);s.default=v.exports},817:function(t,s,a){t.exports=a.p+"assets/img/1.ea105499.png"}}]);