(window.webpackJsonp=window.webpackJsonp||[]).push([[897],{2725:function(s,a,e){"use strict";e.r(a);var n=e(2),t=Object(n.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"volume-概述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#volume-概述"}},[s._v("#")]),s._v(" Volume 概述")]),s._v(" "),e("p",[s._v("Volume 是 Pod 中能够被多个容器访问的共享目录。Kubernetes 的 Volume 定义在 Pod 上，\n它被一个 Pod 中的多个容 器挂载到具体的文件目录下。Volume 与 Pod 的生命周期相同，\n但与容器的生命周期不相关，当容器终止或重启时，Volume 中的数据也不会丢失。要使用\nvolume，pod 需要指定 volume 的类型和内容（ 字段），和映射到容器的位置（ 字段）。\nKubernetes 支持多种类型的 Volume,包括：emptyDir、hostPath、gcePersistentDisk、\nawsElasticBlockStore、nfs、iscsi、flocker、glusterfs、rbd、cephfs、gitRepo、\nsecret、persistentVolumeClaim、downwardAPI、azureFileVolume、azureDisk、\nvsphereVolume、Quobyte、PortworxVolume、ScaleIO。emptyDirEmptyDir 类型的 volume\n创建于 pod 被调度到某个宿主机上的时候，而同一个 pod 内的容器都能读写 EmptyDir 中\n的同一个文件。一旦这个 pod 离开了这个宿主机，EmptyDir 中的数据就会被永久删除。所\n以目前 EmptyDir 类型的 volume 主要用作临时空间，比如 Web 服务器写日志或者 tmp 文件\n需要的临时目录。")]),s._v(" "),e("h2",{attrs:{id:"yaml-示例如下"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#yaml-示例如下"}},[s._v("#")]),s._v(" yaml 示例如下")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("apiVersion: v1 kind: Pod metadata:\nname: test-pd spec:\ncontainers:\n- image: docker.io/nazarpc/webserver\nname: test-container\nvolumeMounts:\n- mountPath: /cache name: cache-volume\nvolumes:\n- name: cache-volume emptyDir: "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("h2",{attrs:{id:"hostpath"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hostpath"}},[s._v("#")]),s._v(" hostPath")]),s._v(" "),e("p",[s._v("HostPath 属性的 volume 使得对应的容器能够访问当前宿主机上的指定目录。例如，需要\n运行一个访问 Docker 系统目录的容器，那么就使用/var/lib/docker 目录作为一个\nHostDir 类型的 volume；或者要在一个容器内部运行 CAdvisor，那么就使用/dev/cgroups\n目录作为一个 HostDir 类型的 volume。一旦这个 pod 离开了这个宿主机，HostDir 中的数\n据虽然不会被永久删除，但数据也不会随 pod 迁移到其他宿主机上。因此，需要 注意的是，\n由于各个宿主机上的文件系统结构和内容并不一定完全相同，所以相同 pod 的 HostDir 可\n能会在不 同的宿主机上表现出不同的行为。yaml 示例如下：")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("apiVersion: v1 kind: Pod metadata:\nname: test-pd spec:\ncontainers:\n-image: docker.io/nazarpc/webserver name: test-container\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定在容器中挂接路径")]),s._v("\nvolumeMounts:\n- mountPath: /test-pd name: test-volume\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定所提供的存储卷")]),s._v("\nvolumes:\n-name: test-volume "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 宿主机上的目录 hostPath:")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# directory location on host path: /data")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("h2",{attrs:{id:"nfs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nfs"}},[s._v("#")]),s._v(" nfs")]),s._v(" "),e("p",[s._v("NFS 类型 volume。允许一块现有的网络硬盘在同一个 pod 内的容器间共享。yaml 示例如下：")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("apiVersion: apps/v1 "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# for versions before 1.9.0 use apps/v1beta2 kind:")]),s._v("\nDeployment\nmetadata:\nname: redis spec:\nselector: matchLabels:\napp: redis revisionHistoryLimit: "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" template:\nmetadata:\nlabels:\napp: redis spec:\ncontainers:\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 应用的镜像")]),s._v("\n-image: redis name: redis\nimagePullPolicy: IfNotPresent "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 应用的内部端口")]),s._v("\nports:\n-containerPort: "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),s._v(" name: redis6379\nenv:\n-name: ALLOW_EMPTY_PASSWORD\nvalue: "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"yes"')]),s._v("\n-name: REDIS_PASSWORD\nvalue: "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"redis"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 持久化挂接位置，在 docker 中")]),s._v("\nvolumeMounts:\n-name: redis-persistent-storage mountPath: /data\nvolumes:\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 宿主机上的目录")]),s._v("\n-name: redis-persistent-storage nfs:\npath: /k8s-nfs/redis/data server: "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".126.112\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br")])])])}),[],!1,null,null,null);a.default=t.exports}}]);