(window.webpackJsonp=window.webpackJsonp||[]).push([[1288],{3222:function(t,a,e){"use strict";e.r(a);var s=e(2),l=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"http-的架构模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http-的架构模式"}},[t._v("#")]),t._v(" HTTP 的架构模式")]),t._v(" "),e("ul",[e("li",[t._v("Http 是客户端/服务器模式中请求-响应所用的协议，在这种模式中，客户端(一般是 web 浏览器)向服务器提交 HTTP 请求，服务器响应请求的资源")]),t._v(" "),e("li",[t._v("单工：单向通信，类似于学校的广播")]),t._v(" "),e("li",[t._v("半双工：单双向通信, 客户端先发请求，服务器端响应，不能在同一时间点同时通信，类似于只有一个车道，当客户端给服务器端发消息的时候，服务器端不能给客户端发消息，反之也是。")]),t._v(" "),e("li",[t._v("双工：全双向通信, 客户端和服务器端可以同时通信，类打电话，类似于有两个车道")])]),t._v(" "),e("h2",{attrs:{id:"http-的特点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http-的特点"}},[t._v("#")]),t._v(" HTTP 的特点")]),t._v(" "),e("ul",[e("li",[t._v("HTTP 是半双工协议，也就是说，在同一时刻数据只能单向流动，客户端向服务器发送请求(单向的)，然后服务器响应请求(单向的)。")]),t._v(" "),e("li",[t._v("服务器不能主动推送数据给浏览器。")])])])}),[],!1,null,null,null);a.default=l.exports}}]);