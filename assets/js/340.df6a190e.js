(window.webpackJsonp=window.webpackJsonp||[]).push([[340],{1249:function(t,_,v){t.exports=v.p+"assets/img/82.2a6ef290.png"},2751:function(t,_,v){"use strict";v.r(_);var d=v(2),r=Object(d.a)({},(function(){var t=this,_=t.$createElement,d=t._self._c||_;return d("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[d("h2",{attrs:{id:"一条数据存储的过程"}},[d("a",{staticClass:"header-anchor",attrs:{href:"#一条数据存储的过程"}},[t._v("#")]),t._v(" 一条数据存储的过程")]),t._v(" "),d("p",[t._v("存储数据是处理数据的第一步 。只有正确地把数据存储起来，我们才能进行有效的处理和分析。否则，只\n能是一团乱麻，无从下手。\n那么，怎样才能把用户各种经营相关的、纷繁复杂的数据，有序、高效地存储起来呢？ 在 MySQL 中，\n一个完整的数据存储过程总共有 4 步，分别是创建数据库、确认字段、创建数据表、插入数据。")]),t._v(" "),d("p",[d("img",{attrs:{src:v(1249),alt:""}})]),t._v(" "),d("p",[t._v("我们要先创建一个数据库，而不是直接创建数据表呢？\n因为从系统架构的层次上看，MySQL 数据库系统从大到小依次是 数据库服务器 、 数据库 、 数据表 、数\n据表的 行与列 。\nMySQL 数据库服务器之前已经安装。所以，我们就从创建数据库开始。")]),t._v(" "),d("h2",{attrs:{id:"标识符命名规则"}},[d("a",{staticClass:"header-anchor",attrs:{href:"#标识符命名规则"}},[t._v("#")]),t._v(" 标识符命名规则")]),t._v(" "),d("p",[t._v("数据库名、表名不得超过 30 个字符，变量名限制为 29 个\n必须只能包含 A–Z, a–z, 0–9, _共 63 个字符\n数据库名、表名、字段名等对象名中间不要包含空格\n同一个 MySQL 软件中，数据库不能同名；同一个库中，表不能重名；同一个表中，字段不能重名\n必须保证你的字段没有和保留字、数据库系统或常用方法冲突。如果坚持使用，请在 SQL 语句中使\n用`（着重号）引起来\n保持字段名和类型的一致性：在命名字段并为其指定数据类型的时候一定要保证一致性，假如数据\n类型在一个表里是整数，那在另一个表里可就别变成字符型了")]),t._v(" "),d("h2",{attrs:{id:"mysql-中的数据类型"}},[d("a",{staticClass:"header-anchor",attrs:{href:"#mysql-中的数据类型"}},[t._v("#")]),t._v(" MySQL 中的数据类型")]),t._v(" "),d("table",[d("thead",[d("tr",[d("th",[t._v("表头")]),t._v(" "),d("th",[t._v("表头")])])]),t._v(" "),d("tbody",[d("tr",[d("td",[t._v("整数类型")]),t._v(" "),d("td",[t._v("TINYINT、SMALLINT、MEDIUMINT、INT(或 INTEGER)、BIGINT")])]),t._v(" "),d("tr",[d("td",[t._v("浮点类型")]),t._v(" "),d("td",[t._v("FLOAT、DOUBLE")])]),t._v(" "),d("tr",[d("td",[t._v("定点数类型")]),t._v(" "),d("td",[t._v("DECIMAL")])]),t._v(" "),d("tr",[d("td",[t._v("位类型")]),t._v(" "),d("td",[t._v("BIT")])]),t._v(" "),d("tr",[d("td",[t._v("日期时间类型")]),t._v(" "),d("td",[t._v("YEAR、TIME、DATE、DATETIME、TIMESTAMP")])]),t._v(" "),d("tr",[d("td",[t._v("文本字符串类型")]),t._v(" "),d("td",[t._v("CHAR、VARCHAR、TINYTEXT、TEXT、MEDIUMTEXT、LONGTEXT")])]),t._v(" "),d("tr",[d("td",[t._v("枚举类型")]),t._v(" "),d("td",[t._v("ENUM")])]),t._v(" "),d("tr",[d("td",[t._v("集合类型")]),t._v(" "),d("td",[t._v("SET")])])])]),t._v(" "),d("p",[t._v("| 二进制字符串类\n型 | BINARY、VARBINARY、TINYBLOB、BLOB、MEDIUMBLOB、LONGBLOB |\n| JSON 类型 | JSON 对象、JSON 数组 |\n| 空间数据类型 | 单值：GEOMETRY、POINT、LINESTRING、POLYGON；\n集合：MULTIPOINT、MULTILINESTRING、MULTIPOLYGON、\nGEOMETRYCOLLECTION |")]),t._v(" "),d("p",[t._v("其中，常用的几类类型介绍如下：")]),t._v(" "),d("table",[d("thead",[d("tr",[d("th",[t._v("数据类型")]),t._v(" "),d("th",[t._v("描述")])])]),t._v(" "),d("tbody",[d("tr",[d("td",[t._v("INT")]),t._v(" "),d("td",[t._v("从-2^31 到 2^31-1 的整型数据。存储大小为 4 个字节")])]),t._v(" "),d("tr",[d("td",[t._v("CHAR(size)")]),t._v(" "),d("td",[t._v("定长字符数据。若未指定，默认为 1 个字符，最大长度 255")])]),t._v(" "),d("tr",[d("td",[t._v("VARCHAR(size)")]),t._v(" "),d("td",[t._v("可变长字符数据，根据字符串实际长度保存，必须指定长度")])]),t._v(" "),d("tr",[d("td",[t._v("FLOAT(M,D)")]),t._v(" "),d("td",[t._v("单精度，占用 4 个字节，M=整数位+小数位，D=小数位。 D<=M<=255,0<=D<=30，")])]),t._v(" "),d("tr",[d("td",[t._v("默认 M+D<=6")]),t._v(" "),d("td")]),t._v(" "),d("tr",[d("td",[t._v("DOUBLE(M,D)")]),t._v(" "),d("td",[t._v("双精度，占用 8 个字节，D<=M<=255,0<=D<=30，默认 M+D<=15")])]),t._v(" "),d("tr",[d("td",[t._v("DECIMAL(M,D)")]),t._v(" "),d("td",[t._v("高精度小数，占用 M+2 个字节，D<=M<=65，0<=D<=30，最大取值范围与 DOUBLE")])]),t._v(" "),d("tr",[d("td",[t._v("相同。")]),t._v(" "),d("td")]),t._v(" "),d("tr",[d("td",[t._v("DATE")]),t._v(" "),d("td",[t._v("日期型数据，格式'YYYY-MM-DD")])]),t._v(" "),d("tr",[d("td",[t._v("BLOB")]),t._v(" "),d("td",[t._v("二进制形式的长文本数据，最大可达 4G")])]),t._v(" "),d("tr",[d("td",[t._v("TEXT")]),t._v(" "),d("td",[t._v("长文本数据，最大可达 4G")])])])])])}),[],!1,null,null,null);_.default=r.exports}}]);