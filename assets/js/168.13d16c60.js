(window.webpackJsonp=window.webpackJsonp||[]).push([[168],{2639:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"面试题汇总"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#面试题汇总"}},[t._v("#")]),t._v(" 面试题汇总")]),t._v(" "),n("h3",{attrs:{id:"说一下redux"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#说一下redux"}},[t._v("#")]),t._v(" 说一下redux")]),t._v(" "),n("p",[n("img",{attrs:{src:a(888),alt:""}})]),t._v(" "),n("ul",[n("li",[t._v("是什么？\n"),n("ul",[n("li",[t._v("redux用于状态管理。因为在React中，数据在组件中是单向流动的，数据从一个方向父组件流向子组件(通过props)，由于这个特征，两个非父子关系的组件（或者称作兄弟组件）之间的通信就比较麻烦。Redux的出现就是为了解决state里的数据问题")]),t._v(" "),n("li",[t._v("是状态管理工具。将整个应用状态存储到store中。里面保存一棵状态树state tree 。组件可以派发dispatch行为action给store,而不是直接通知其它组件。其它组件可以通过订阅store中的状态(state)来刷新自己的视图。")])])]),t._v(" "),n("li",[t._v("能干什么？干的怎么样？\n"),n("ul",[n("li",[t._v("流程:\n"),n("ul",[n("li",[n("ol",{attrs:{start:"0"}},[n("li",[t._v("Redux是将整个应用状态存储到到一个地方，称为store。里面保存一棵状态树state tree")])])]),t._v(" "),n("li",[n("ol",[n("li",[t._v("组件通过调用dispatch，分发action，action对象包括了type类型和data数据")])])]),t._v(" "),n("li",[n("ol",{attrs:{start:"2"}},[n("li",[t._v("然后这个action会给store，store会连接reducer，把action交给reducer")])])]),t._v(" "),n("li",[n("ol",{attrs:{start:"3"}},[n("li",[t._v("reducer会根据action的type对状态进行变更，然后返回新状态，新状态会交给store来管理")])])]),t._v(" "),n("li",[n("ol",{attrs:{start:"4"}},[n("li",[t._v("然后在其它组件可以通过订阅store中的状态(state)来刷新自己的视图")])])])])])])])]),t._v(" "),n("h2",{attrs:{id:"redux应用场景"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#redux应用场景"}},[t._v("#")]),t._v(" Redux应用场景")]),t._v(" "),n("p",[n("img",{attrs:{src:a(889),alt:""}})]),t._v(" "),n("h2",{attrs:{id:"redux设计思想"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#redux设计思想"}},[t._v("#")]),t._v(" Redux设计思想")]),t._v(" "),n("p",[n("img",{attrs:{src:a(890),alt:""}})]),t._v(" "),n("h2",{attrs:{id:"redux三大原则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#redux三大原则"}},[t._v("#")]),t._v(" Redux三大原则")]),t._v(" "),n("ul",[n("li",[t._v("整个应用的 state 被储存在一棵 object tree 中，并且这个 object tree 只存在于唯一一个 store 中")]),t._v(" "),n("li",[t._v("State 是只读的，惟一改变 state 的方法就是触发 action，action 是一个用于描述已发生事件的普通对象 使用纯函数来执行修改，为了描述action如何改变state tree ，你需要编写 reducers")]),t._v(" "),n("li",[t._v("单一数据源的设计让React的组件之间的通信更加方便，同时也便于状态的统一管理")])]),t._v(" "),n("h2",{attrs:{id:"react-redux之计数器案例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#react-redux之计数器案例"}},[t._v("#")]),t._v(" react-redux之计数器案例")]),t._v(" "),n("ul",[n("li",[t._v("流程还是跟上一个redux计数器案例一样的：\n"),n("ul",[n("li",[n("ol",[n("li",[t._v("创建仓库store")])])]),t._v(" "),n("li",[n("ol",{attrs:{start:"2"}},[n("li",[t._v("编写reducer")])])]),t._v(" "),n("li",[n("ol",{attrs:{start:"3"}},[n("li",[t._v("把store传给App组件")])])]),t._v(" "),n("li",[n("ol",{attrs:{start:"4"}},[n("li",[t._v("搭建页面，定义方法")])])]),t._v(" "),n("li",[n("ol",{attrs:{start:"5"}},[n("li",[t._v("定义 action名称，创建action")])])]),t._v(" "),n("li",[n("ol",{attrs:{start:"6"}},[n("li",[t._v("在reducer中根据分发过来的action更新状态")])])]),t._v(" "),n("li",[n("ol",{attrs:{start:"7"}},[n("li",[t._v("在组件中就可以通过dispatch分发对应的action")])])])])]),t._v(" "),n("li",[t._v("不过会有一些小变动")])]),t._v(" "),n("h2",{attrs:{id:"react-redux的使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#react-redux的使用"}},[t._v("#")]),t._v(" react-redux的使用")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("是一个react插件库")])]),t._v(" "),n("li",[n("p",[t._v("专门用来简化react应用中使用redux")])]),t._v(" "),n("li",[n("p",[t._v("React-Redux将所有组件分成两大类")])]),t._v(" "),n("li",[n("p",[t._v("1)UI组件")]),t._v(" "),n("ul",[n("li",[t._v("a.只负责 UI 的呈现，不带有任何业务逻辑")]),t._v(" "),n("li",[t._v("b.通过props接收数据(一般数据和函数)")]),t._v(" "),n("li",[t._v("c.不使用任何 Redux 的 API")]),t._v(" "),n("li",[t._v("d.一般保存在components文件夹下")])])]),t._v(" "),n("li",[n("p",[t._v("2)容器组件")])]),t._v(" "),n("li",[n("p",[t._v("a.负责管理数据和业务逻辑，不负责UI的呈现")])]),t._v(" "),n("li",[n("p",[t._v("b.使用 Redux 的 API")])]),t._v(" "),n("li",[n("p",[t._v("c.一般保存在containers文件夹下")])]),t._v(" "),n("li",[n("p",[t._v("安装：")])])]),t._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" react-redux\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br")])]),n("ul",[n("li",[n("p",[t._v("jsx文件负责页面ui展示")])]),t._v(" "),n("li",[n("p",[t._v("js文件负责逻辑")])]),t._v(" "),n("li",[n("p",[t._v("在容器组件中：")])])]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Counter "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'../components/counter'")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("createIncrementAction"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("createDecrementAction"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'../redux/action_creators'")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("connect"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react-redux'")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//传递State完整写法")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* function mapStateToProps(state) {\n  return {count:state}\n} */")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//传递State简写方式")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//let mapStateToProps = state => ({count:state})")]),t._v("\n\n\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//分发事件完整写法")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* function mapDispatchToProps(dispatch) {\n  return {\n    increment:(value)=>{dispatch(createIncrementAction(value))},\n    decrement:(value)=>{dispatch(createDecrementAction(value))},\n  }\n} */")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//分发事件简写方式")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* let mapDispatchToProps = dispatch => ({\n  increment:(value)=>{dispatch(createIncrementAction(value))},\n  decrement:(value)=>{dispatch(createDecrementAction(value))},\n}) */")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//connect函数完整写法")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//export default connect(mapStateToProps,mapDispatchToProps)(Counter)")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//最终版本的写法，该容器组件最终只要写下面这么几行代码")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("connect")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("state")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("count")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("state"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("increment")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("createIncrementAction"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("decrement")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("createDecrementAction\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Counter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//按照之前的写法：")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果connect函数的第二个参数传递的是：mapDispatchToProps")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//那么UI组件接收到的increment是：(value)=>{dispatch(createIncrementAction(value))}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//那么UI组件接收到的decrement是：(value)=>{dispatch(createDecrementAction(value))}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 其实就是拿到对象，里面有两个方法")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//按照新的写法：")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果connect函数的第二个参数传递的是：{increment:createIncrementAction}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//那么UI组件接收到的increment是：(value)=>{dispatch(createIncrementAction(value))}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 因为底层帮我们处理完了")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//connect函数做了如下的事情：")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* function connect(createIncrementAction) {\n  return (value)=>{dispatch(createIncrementAction(value))\n} */")]),t._v("\n\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br"),n("span",{staticClass:"line-number"},[t._v("27")]),n("br"),n("span",{staticClass:"line-number"},[t._v("28")]),n("br"),n("span",{staticClass:"line-number"},[t._v("29")]),n("br"),n("span",{staticClass:"line-number"},[t._v("30")]),n("br"),n("span",{staticClass:"line-number"},[t._v("31")]),n("br"),n("span",{staticClass:"line-number"},[t._v("32")]),n("br"),n("span",{staticClass:"line-number"},[t._v("33")]),n("br"),n("span",{staticClass:"line-number"},[t._v("34")]),n("br"),n("span",{staticClass:"line-number"},[t._v("35")]),n("br"),n("span",{staticClass:"line-number"},[t._v("36")]),n("br"),n("span",{staticClass:"line-number"},[t._v("37")]),n("br"),n("span",{staticClass:"line-number"},[t._v("38")]),n("br"),n("span",{staticClass:"line-number"},[t._v("39")]),n("br"),n("span",{staticClass:"line-number"},[t._v("40")]),n("br"),n("span",{staticClass:"line-number"},[t._v("41")]),n("br"),n("span",{staticClass:"line-number"},[t._v("42")]),n("br"),n("span",{staticClass:"line-number"},[t._v("43")]),n("br"),n("span",{staticClass:"line-number"},[t._v("44")]),n("br"),n("span",{staticClass:"line-number"},[t._v("45")]),n("br"),n("span",{staticClass:"line-number"},[t._v("46")]),n("br"),n("span",{staticClass:"line-number"},[t._v("47")]),n("br"),n("span",{staticClass:"line-number"},[t._v("48")]),n("br"),n("span",{staticClass:"line-number"},[t._v("49")]),n("br"),n("span",{staticClass:"line-number"},[t._v("50")]),n("br"),n("span",{staticClass:"line-number"},[t._v("51")]),n("br"),n("span",{staticClass:"line-number"},[t._v("52")]),n("br"),n("span",{staticClass:"line-number"},[t._v("53")]),n("br"),n("span",{staticClass:"line-number"},[t._v("54")]),n("br"),n("span",{staticClass:"line-number"},[t._v("55")]),n("br"),n("span",{staticClass:"line-number"},[t._v("56")]),n("br"),n("span",{staticClass:"line-number"},[t._v("57")]),n("br")])]),n("ul",[n("li",[t._v("注意：想要使用 Redux DevTools")]),t._v(" "),n("li",[t._v("安装：npm i --save-dev redux-devtools-extension")]),t._v(" "),n("li",[t._v("需要在store.js:")])]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("composeWithDevTools"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'redux-devtools-extension'")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createStore")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reducer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("composeWithDevTools")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("applyMiddleware")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("thunk"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br")])])])}),[],!1,null,null,null);s.default=e.exports},888:function(t,s,a){t.exports=a.p+"assets/img/3.50da07f7.png"},889:function(t,s,a){t.exports=a.p+"assets/img/6.015c5a70.png"},890:function(t,s,a){t.exports=a.p+"assets/img/7.9ba0310b.png"}}]);