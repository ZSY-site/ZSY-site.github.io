(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{2698:function(s,a,t){"use strict";t.r(a);var e=t(2),r=Object(e.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"前提说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前提说明"}},[s._v("#")]),s._v(" 前提说明")]),s._v(" "),e("ul",[e("li",[e("ol",[e("li",[s._v("CentOS Docker 安装")])]),s._v(" "),e("ul",[e("li",[e("img",{attrs:{src:t(935),alt:""}})])])]),s._v(" "),e("li",[e("ol",{attrs:{start:"2"}},[e("li",[s._v("前提条件")])]),s._v(" "),e("ul",[e("li",[s._v("目前，CentOS 仅发行版本中的内核支持 Docker。Docker 运行在 CentOS 7 (64-bit)上，要求系统为 64 位、Linux 系统内核版本为 3.8 以上，这里选用 Centos7.x")])])]),s._v(" "),e("li",[e("ol",{attrs:{start:"3"}},[e("li",[s._v("查看自己的内核")])]),s._v(" "),e("ul",[e("li",[s._v("uname 命令用于打印当前系统相关信息（内核版本号、硬件架构、主机名称和操作系统类型等）。")]),s._v(" "),e("li",[e("img",{attrs:{src:t(936),alt:""}})])])])]),s._v(" "),e("h2",{attrs:{id:"docker-的基本组成"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker-的基本组成"}},[s._v("#")]),s._v(" Docker 的基本组成")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("Docker 中最重要的三个基本元素组成：")]),s._v(" "),e("ul",[e("li",[e("ol",[e("li",[s._v("镜像")])])]),s._v(" "),e("li",[e("ol",{attrs:{start:"2"}},[e("li",[s._v("容器")])])]),s._v(" "),e("li",[e("ol",{attrs:{start:"3"}},[e("li",[s._v("仓库")])])])])]),s._v(" "),e("li",[e("p",[s._v("从 java 代码层面理解镜像、容器和仓库")])])]),s._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 镜像：下面的 Book 就是镜像，类似Java中的类模板")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 容器：new Book() 是基于同一份类模板产生的，就是实例对象，也是容器")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 仓库：存放镜像的地方")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Book")]),s._v(" b1 "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Book")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Book")]),s._v(" b2 "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Book")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Book")]),s._v(" b3 "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Book")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("h3",{attrs:{id:"镜像-image"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#镜像-image"}},[s._v("#")]),s._v(" 镜像(image)")]),s._v(" "),e("ul",[e("li",[s._v("Docker 镜像（Image）就是一个只读的模板。镜像可以用来创建 Docker 容器，一个镜像可以创建很多容器。")]),s._v(" "),e("li",[s._v("它也相当于是一个 root 文件系统。比如官方镜像 centos:7 就包含了完整的一套 centos:7 最小系统的 root 文件系统。")]),s._v(" "),e("li",[s._v("相当于容器的“源代码”，docker 镜像文件类似于 Java 的类模板，而 docker 容器实例类似于 java 中 new 出来的实例对象。")]),s._v(" "),e("li",[e("img",{attrs:{src:t(937),alt:""}})])]),s._v(" "),e("h3",{attrs:{id:"容器-container"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#容器-container"}},[s._v("#")]),s._v(" 容器(container)")]),s._v(" "),e("ul",[e("li",[s._v("从面向对象角度：Docker 利用容器（Container）独立运行的一个或一组应用，应用程序或服务运行在容器里面，容器就类似于一个虚拟化的运行环境，容器是用镜像创建的运行实例。就像是 Java 中的类和实例对象一样，镜像是静态的定义，容器是镜像运行时的实体。容器为镜像提供了一个标准的和隔离的运行环境，它可以被启动、开始、停止、删除。每个容器都是相互隔离的、保证安全的平台")]),s._v(" "),e("li",[s._v("从镜像容器角度：可以把容器看做是一个简易版的 Linux 环境（包括 root 用户权限、进程空间、用户空间和网络空间等）和运行在其中的应用程序。")])]),s._v(" "),e("h3",{attrs:{id:"仓库-repository"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#仓库-repository"}},[s._v("#")]),s._v(" 仓库(repository)")]),s._v(" "),e("ul",[e("li",[s._v("仓库（Repository）是集中存放镜像文件的场所。")]),s._v(" "),e("li",[s._v("类似于 Maven 仓库，存放各种 jar 包的地方；github 仓库，存放各种 git 项目的地方；Docker 公司提供的官方 registry 被称为 Docker Hub，存放各种镜像模板的地方。")]),s._v(" "),e("li",[s._v("仓库分为公开仓库（Public）和私有仓库（Private）两种形式。最大的公开仓库是 Docker Hub(https://hub.docker.com/)，存放了数量庞大的镜像供用户下载。国内的公开仓库包括阿里云 、网易云等")])]),s._v(" "),e("h3",{attrs:{id:"小总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#小总结"}},[s._v("#")]),s._v(" 小总结")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("需要正确的理解仓库/镜像/容器这几个概念: Docker 本身是一个容器运行载体或称之为管理引擎。我们把应用程序和配置依赖打包好形成一个可交付的运行环境，这个打包好的运行环境就是 image 镜像文件。只有通过这个镜像文件才能生成 Docker 容器实例(类似 Java 中 new 出来一个对象)。")])]),s._v(" "),e("li",[e("p",[s._v("image 文件可以看作是容器的模板。Docker 根据 image 文件生成容器的实例。同一个 image 文件，可以生成多个同时运行的容器实例。")])]),s._v(" "),e("li",[e("p",[s._v("镜像文件：image 文件生成的容器实例，本身也是一个文件，称为镜像文件。")])]),s._v(" "),e("li",[e("p",[s._v("容器实例：一个容器运行一种服务（如 mysql、redis 等），当我们需要的时候，就可以通过 docker 客户端创建一个对应的运行实例，也就是我们的容器")])]),s._v(" "),e("li",[e("p",[s._v("仓库：就是放一堆镜像的地方，我们可以把镜像发布到仓库中，需要的时候再从仓库中拉下来就可以了。")])])]),s._v(" "),e("h2",{attrs:{id:"docker-平台架构图解-架构版"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker-平台架构图解-架构版"}},[s._v("#")]),s._v(" Docker 平台架构图解(架构版)")]),s._v(" "),e("ul",[e("li",[s._v("没懂后续可以回头来看")])]),s._v(" "),e("p",[e("img",{attrs:{src:t(938),alt:""}})]),s._v(" "),e("ul",[e("li",[s._v("首次懵逼正常，后续深入，先有大概轮廓，混个眼熟")]),s._v(" "),e("li",[s._v("整体架构及底层通信原理简述\nDocker 是一个 C/S 模式的架构，后端是一个松耦合架构，众多模块各司其职。\n"),e("img",{attrs:{src:t(939),alt:""}})])]),s._v(" "),e("p",[e("img",{attrs:{src:t(940),alt:""}})]),s._v(" "),e("h2",{attrs:{id:"安装步骤"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装步骤"}},[s._v("#")]),s._v(" 安装步骤")]),s._v(" "),e("ul",[e("li",[s._v("CentOS7 安装 Docker: 可以参考"),e("a",{attrs:{href:"https://docs.docker.com/engine/install/centos/",target:"_blank",rel:"noopener noreferrer"}},[s._v("官方地址"),e("OutboundLink")],1)]),s._v(" "),e("li",[s._v("安装步骤分为如下九步：\n"),e("ul",[e("li",[e("ol",[e("li",[s._v("确定你是 CentOS7 及以上版本")])])]),s._v(" "),e("li",[e("ol",{attrs:{start:"2"}},[e("li",[s._v("卸载旧版本")])])]),s._v(" "),e("li",[e("ol",{attrs:{start:"3"}},[e("li",[s._v("yum 安装 gcc 相关")])])]),s._v(" "),e("li",[e("ol",{attrs:{start:"4"}},[e("li",[s._v("安装需要的软件包")])])]),s._v(" "),e("li",[e("ol",{attrs:{start:"5"}},[e("li",[s._v("设置 stable 镜像仓库")])])]),s._v(" "),e("li",[e("ol",{attrs:{start:"6"}},[e("li",[s._v("更新 yum 软件包索引")])])]),s._v(" "),e("li",[e("ol",{attrs:{start:"7"}},[e("li",[s._v("安装 DOCKER CE")])])]),s._v(" "),e("li",[e("ol",{attrs:{start:"8"}},[e("li",[s._v("启动 docker")])])]),s._v(" "),e("li",[e("ol",{attrs:{start:"9"}},[e("li",[s._v("测试")])])]),s._v(" "),e("li",[e("ol",{attrs:{start:"10"}},[e("li",[s._v("卸载")])])])])])]),s._v(" "),e("h3",{attrs:{id:"确定你是-centos7-及以上版本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#确定你是-centos7-及以上版本"}},[s._v("#")]),s._v(" 确定你是 CentOS7 及以上版本")]),s._v(" "),e("ul",[e("li",[s._v("cat /etc/redhat-release")]),s._v(" "),e("li",[s._v("卸载旧版本")])]),s._v(" "),e("p",[e("img",{attrs:{src:t(941),alt:""}})]),s._v(" "),e("h3",{attrs:{id:"yum-安装-gcc-相关"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#yum-安装-gcc-相关"}},[s._v("#")]),s._v(" yum 安装 gcc 相关")]),s._v(" "),e("ul",[e("li",[s._v("确保 CentOS7 能上外网，如下如所示：\n"),e("ul",[e("li",[e("img",{attrs:{src:t(942),alt:""}})])])])]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在VMware虚拟机中分别执行如下的命令")]),s._v("\nyum "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-y")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" gcc\nyum "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-y")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" gcc-c++\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("h3",{attrs:{id:"安装需要的软件包"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装需要的软件包"}},[s._v("#")]),s._v(" 安装需要的软件包")]),s._v(" "),e("ul",[e("li",[s._v("官网要求\n"),e("ul",[e("li",[e("img",{attrs:{src:t(943),alt:""}})])])])]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在VMware虚拟机中执行如下命令")]),s._v("\nyum "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-y")]),s._v(" yum-utils\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h3",{attrs:{id:"设置-stable-镜像仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置-stable-镜像仓库"}},[s._v("#")]),s._v(" 设置 stable 镜像仓库")]),s._v(" "),e("ul",[e("li",[e("img",{attrs:{src:t(944),alt:""}})])]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 注意: 这里有个坑，如果你上图中官网的命令的方式去执行命令，该命令的意思是设置仓库，不过该仓库是在国外的，所有后续执行其他命令可能会报如下错误：")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# [Errno 14] curl#35 - TCP connection reset by peer")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# [Errno 12] curl#35 - Timeout")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 因此千万不要执行如下的命令")]),s._v("\nyum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("ul",[e("li",[s._v("我们推荐使用如下的方式，即设置本地仓库是阿里云")])]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h3",{attrs:{id:"更新-yum-软件包索引"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#更新-yum-软件包索引"}},[s._v("#")]),s._v(" 更新 yum 软件包索引")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 该命令是官网上没有介绍的，是linux相关的知识")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 由于我们后续需要通过 yum 命令安装相关软件，所以需要更新 yum 软件包索引")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 这样下载速度更快")]),s._v("\nyum makecache fast\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("h3",{attrs:{id:"安装-docker-ce"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装-docker-ce"}},[s._v("#")]),s._v(" 安装 DOCKER CE")]),s._v(" "),e("ul",[e("li",[s._v("官网介绍：\n"),e("ul",[e("li",[e("img",{attrs:{src:t(945),alt:""}})])])])]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 下面的命令才是真正的安装docker，前面都是准备工作")]),s._v("\nyum "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-y")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" docker-ce docker-ce-cli containerd.io\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("ul",[e("li",[s._v("执行结果\n"),e("ul",[e("li",[e("img",{attrs:{src:t(946),alt:""}})])])])]),s._v(" "),e("h3",{attrs:{id:"启动-docker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#启动-docker"}},[s._v("#")]),s._v(" 启动 docker")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 执行下面的命令启动docker，没有任何提示说明启动成功")]),s._v("\nsystemctl start "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h3",{attrs:{id:"测试"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#测试"}},[s._v("#")]),s._v(" 测试")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" version\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("ul",[e("li",[s._v("输出结果如下：可以看到有 docker client 端 和 docker server 端\n"),e("ul",[e("li",[e("img",{attrs:{src:t(947),alt:""}})])])])]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 下面的命令表示执行名为 hello-world 的镜像")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 注意：当执行莫个镜像的时候，如果本地有，则根据镜像生成容器实例，如果没有，则需要去远程仓库拉取相应的镜像")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run hello-world\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("ul",[e("li",[s._v("输出结果如下：\n"),e("ul",[e("li",[e("img",{attrs:{src:t(948),alt:""}})])])])]),s._v(" "),e("h3",{attrs:{id:"卸载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#卸载"}},[s._v("#")]),s._v(" 卸载")]),s._v(" "),e("ul",[e("li",[e("img",{attrs:{src:t(949),alt:""}})])]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 停止docker后台进程服务")]),s._v("\nsystemctl stop "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 移除")]),s._v("\nyum remove docker-ce docker-ce-cli containerd.io\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除本地的配置文件的能")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-rf")]),s._v(" /var/lib/docker\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-rf")]),s._v(" /var/lib/containerd\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("h2",{attrs:{id:"阿里云镜像加速"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#阿里云镜像加速"}},[s._v("#")]),s._v(" 阿里云镜像加速")]),s._v(" "),e("h3",{attrs:{id:"是什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#是什么"}},[s._v("#")]),s._v(" 是什么")]),s._v(" "),e("ul",[e("li",[s._v("由于访问国外网站比较慢，为了后续拉镜像, 运行容器更加快速，所以配置镜像加速器，即阿里云镜像加速。当然还有其他网易云，华为云等。")]),s._v(" "),e("li",[s._v("阿里云地址：https://promotion.aliyun.com/ntms/act/kubernetes.html")])]),s._v(" "),e("h3",{attrs:{id:"注册一个属于自己的阿里云账户-可复用淘宝账号"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#注册一个属于自己的阿里云账户-可复用淘宝账号"}},[s._v("#")]),s._v(" 注册一个属于自己的阿里云账户(可复用淘宝账号)")]),s._v(" "),e("h3",{attrs:{id:"获得加速器地址连接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#获得加速器地址连接"}},[s._v("#")]),s._v(" 获得加速器地址连接")]),s._v(" "),e("ul",[e("li",[s._v("登陆阿里云开发者平台\n"),e("ul",[e("li",[e("img",{attrs:{src:t(950),alt:""}})])])]),s._v(" "),e("li",[s._v("点击控制台\n"),e("ul",[e("li",[e("img",{attrs:{src:t(951),alt:""}})])])]),s._v(" "),e("li",[s._v("选择容器镜像服务\n"),e("ul",[e("li",[e("img",{attrs:{src:t(952),alt:""}})])])]),s._v(" "),e("li",[s._v("获取加速器地址\n"),e("ul",[e("li",[e("img",{attrs:{src:t(953),alt:""}})])])])]),s._v(" "),e("h3",{attrs:{id:"粘贴脚本直接执行"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#粘贴脚本直接执行"}},[s._v("#")]),s._v(" 粘贴脚本直接执行")]),s._v(" "),e("ul",[e("li",[s._v("上一步中粘贴了加速器地址后：")])]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 回到虚拟机中执行如下命令")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 注意要将下面的地址改为自己的加速器地址")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" /etc/docker\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("tee")]),s._v(" /etc/docker/daemon.json "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<-")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'EOF\'\n{\n  "registry-mirrors": ["https://aa25jngu.mirror.aliyuncs.com"]\n}\nEOF')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("ul",[e("li",[s._v("或者分步骤都行\n"),e("ul",[e("li",[e("img",{attrs:{src:t(954),alt:""}})])])])]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 先执行：")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" /etc/docker\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 然后执行：")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" /etc/docker/daemon.json\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 最后输入：")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"registry-mirrors"')]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"https://aa25jngu.mirror.aliyuncs.com"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("h3",{attrs:{id:"重启服务器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#重启服务器"}},[s._v("#")]),s._v(" 重启服务器")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 由于上面改了配置文件，所以执行如下的命令重启docker")]),s._v("\nsystemctl daemon-reload\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 激活配置文件并重启docker")]),s._v("\nsystemctl restart "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 最后再次执行如下的命令，如能正常打印则说明没问题")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run hello-world\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("h2",{attrs:{id:"永远的-helloworld"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#永远的-helloworld"}},[s._v("#")]),s._v(" 永远的 HelloWorld")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("启动 Docker 后台容器(测试运行 hello-world)")])]),s._v(" "),e("li",[e("p",[s._v("docker run hello-world")]),s._v(" "),e("ul",[e("li",[e("img",{attrs:{src:t(955),alt:""}})])])]),s._v(" "),e("li",[e("p",[s._v("输出这段提示以后，hello world 就会停止运行，容器自动终止。")])]),s._v(" "),e("li",[e("p",[s._v("run 干了什么")]),s._v(" "),e("ul",[e("li",[e("img",{attrs:{src:t(956),alt:""}})])])])]),s._v(" "),e("h2",{attrs:{id:"底层原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#底层原理"}},[s._v("#")]),s._v(" 底层原理")]),s._v(" "),e("ul",[e("li",[s._v("为什么 Docker 会比 VM 虚拟机快, 原因有如下两点:\n"),e("ul",[e("li",[s._v("(1)docker 有着比虚拟机更少的抽象层：由于 docker 不需要 Hypervisor(虚拟机)实现硬件资源虚拟化, 运行在 docker 容器上的程序直接使用的都是实际物理机的硬件资源。因此在 CPU、内存利用率上 docker 将会在效率上有明显优势。")]),s._v(" "),e("li",[s._v("(2)docker 利用的是宿主机的内核, 而不需要加载操作系统 OS 内核：当新建一个容器时,docker 不需要和虚拟机一样重新加载一个操作系统内核。进而避免引寻、加载操作系统内核返回等比较费时费资源的过程,当新建一个虚拟机时,虚拟机软件需要加载 OS,返回新建过程是分钟级别的。而 docker 由于直接利用宿主机的操作系统,则省略了返回过程,因此新建一个 docker 容器只需要几秒钟。")])])]),s._v(" "),e("li",[e("img",{attrs:{src:t(957),alt:""}})]),s._v(" "),e("li",[e("img",{attrs:{src:t(958),alt:""}})])])])}),[],!1,null,null,null);a.default=r.exports},935:function(s,a,t){s.exports=t.p+"assets/img/17.76e17912.png"},936:function(s,a,t){s.exports=t.p+"assets/img/18.c740af4b.png"},937:function(s,a,t){s.exports=t.p+"assets/img/19.1f410b81.png"},938:function(s,a,t){s.exports=t.p+"assets/img/39.9af8667b.png"},939:function(s,a,t){s.exports=t.p+"assets/img/20.10be027f.png"},940:function(s,a,t){s.exports=t.p+"assets/img/21.7722fe05.png"},941:function(s,a,t){s.exports=t.p+"assets/img/22.1009aa3c.png"},942:function(s,a,t){s.exports=t.p+"assets/img/23.2023a58f.png"},943:function(s,a,t){s.exports=t.p+"assets/img/24.313d9864.png"},944:function(s,a,t){s.exports=t.p+"assets/img/25.efe49c3d.png"},945:function(s,a,t){s.exports=t.p+"assets/img/29.3b95f2d5.png"},946:function(s,a,t){s.exports=t.p+"assets/img/30.71378de7.png"},947:function(s,a,t){s.exports=t.p+"assets/img/31.7b6a7a1e.png"},948:function(s,a,t){s.exports=t.p+"assets/img/32.a815bfd8.png"},949:function(s,a,t){s.exports=t.p+"assets/img/33.3683e7bf.png"},950:function(s,a,t){s.exports=t.p+"assets/img/34.b725f091.png"},951:function(s,a,t){s.exports=t.p+"assets/img/35.fca9554e.png"},952:function(s,a,t){s.exports=t.p+"assets/img/36.931e38c6.png"},953:function(s,a,t){s.exports=t.p+"assets/img/37.71249a63.png"},954:function(s,a,t){s.exports=t.p+"assets/img/38.85199639.png"},955:function(s,a,t){s.exports=t.p+"assets/img/40.3060b298.png"},956:function(s,a,t){s.exports=t.p+"assets/img/41.0f609486.png"},957:function(s,a,t){s.exports=t.p+"assets/img/42.25789b2c.png"},958:function(s,a,t){s.exports=t.p+"assets/img/43.40b5e1f5.png"}}]);