(window.webpackJsonp=window.webpackJsonp||[]).push([[1377],{3353:function(l,t,e){"use strict";e.r(t);var v=e(2),_=Object(v.a)({},(function(){var l=this,t=l.$createElement,e=l._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":l.$parent.slotKey}},[e("ul",[e("li",[e("p",[l._v("本章首先从图像基础开始，在普及了包括图像的构成表示、分类压缩等知识之后，对前端项目中常用的图像文件格式GIF、JPEG、PNG、SVG、WebP及Base64进行了细致的分析介绍，包括它们之间优缺点的比较，具体场景下的技术选型，以及优化使用建议和工程实践。3.3节给出了三点与图像相关的优化技术与建议，希望读者能够明白Web项目中的图像优化是一项技术也是一门艺术，技术指的是对于每一种图像文件的压缩和使用都有一套工程化的手段，艺术指的是当面对具体的项目实践时，如何技术选型与压缩以达到对用户最佳的体验效果，则需要在多个维度上进行权衡与取舍，并不存在明确的最佳方案。")])]),l._v(" "),e("li",[e("p",[l._v("本章最后给出一些希望读者能够记住的方法与技巧：")])]),l._v(" "),e("li",[e("p",[l._v("● 适合用矢量图的地方首选矢量图。")])]),l._v(" "),e("li",[e("p",[l._v("● 使用位图时首选WebP，对不支持的浏览器场景进行兼容处理。")])]),l._v(" "),e("li",[e("p",[l._v("● 尽量为位图图像格式找到最佳质量设置。")])]),l._v(" "),e("li",[e("p",[l._v("● 删除图像文件中多余的元数据。")])]),l._v(" "),e("li",[e("p",[l._v("● 对图像文件进行必要的压缩。")])]),l._v(" "),e("li",[e("p",[l._v("● 为图像提供多种缩放尺寸的响应式资源。")])]),l._v(" "),e("li",[e("p",[l._v("● 对工程化通用图像处理流程尽量自动化。")])])])])}),[],!1,null,null,null);t.default=_.exports}}]);