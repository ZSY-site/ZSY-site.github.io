(window.webpackJsonp=window.webpackJsonp||[]).push([[121],{2135:function(s,t,a){"use strict";a.r(t);var n=a(2),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("ul",[n("li",[s._v("使用 JUnit 5 进行参数化测试，除了 junit-jupiter-engine 基础依赖之外，还需要另外一个模块依赖：junit-jupiter-params，其主要就是提供了编写参数化测试 API。")]),s._v(" "),n("li",[s._v("@ParameterizedTest 作为参数化测试的必要注解，替代了 @Test 注解。【任何一个参数化测试方法】都需要标记上该注解。")])]),s._v(" "),n("h2",{attrs:{id:"valuesource"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#valuesource"}},[s._v("#")]),s._v(" @ValueSource")]),s._v(" "),n("blockquote",[n("p",[s._v("ValueSource里的实参会依次传入到下面方法的形参。只不过下面int类型就写成ints。string类型就写成了strings。@Test和@ParameterizedTest尽量不要放到一起使用，如果使用则测试用例会多执行一次。\n"),n("img",{attrs:{src:a(447),alt:""}})])]),s._v(" "),n("h2",{attrs:{id:"csvsource"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#csvsource"}},[s._v("#")]),s._v(" @CsvSource")]),s._v(" "),n("ul",[n("li",[s._v("这个是多参数化注解\n"),n("img",{attrs:{src:a(448),alt:""}})])]),s._v(" "),n("p",[n("img",{attrs:{src:a(449),alt:""}})]),s._v(" "),n("h2",{attrs:{id:"enumsource"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#enumsource"}},[s._v("#")]),s._v(" @EnumSource")]),s._v(" "),n("h2",{attrs:{id:"methodsource"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#methodsource"}},[s._v("#")]),s._v(" @MethodSource")]),s._v(" "),n("blockquote",[n("p",[s._v("methodSourceTestFacctory方法的返回值 会传递给 parameterizeMethodSourceTest方法的形参。且methodSourceTestFacctory方法必须是静态的。\n"),n("img",{attrs:{src:a(450),alt:""}})])]),s._v(" "),n("h2",{attrs:{id:"nullandemptysource"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nullandemptysource"}},[s._v("#")]),s._v(" @NullAndEmptySource")]),s._v(" "),n("ul",[n("li",[s._v("@NullSource")])]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@parameterizedTest")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@NullSource")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("nullSourceDemo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" param"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("param"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 执行该方法会输出：null")]),s._v("\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("ul",[n("li",[s._v("@EmptySource")])]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@parameterizedTest")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@EmptySource")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("EmptySourceDemo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" param"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("param"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 执行该方法会输出：空空如也，啥也没有输出")]),s._v("\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("ul",[n("li",[s._v("@NullAndEmptySource: 等同于@NullSource和@EmptySource 两个")])]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@parameterizedTest")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@NullAndEmptySource")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("EmptySourceDemo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" param"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("param"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 执行该方法会输出: 第一个输出null 第二个输出空空如也 ")]),s._v("\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])])])}),[],!1,null,null,null);t.default=e.exports},447:function(s,t,a){s.exports=a.p+"assets/img/15.44abe7d7.png"},448:function(s,t,a){s.exports=a.p+"assets/img/16.5cbc1914.png"},449:function(s,t,a){s.exports=a.p+"assets/img/17.7b83a3c9.png"},450:function(s,t,a){s.exports=a.p+"assets/img/18.70c38d2f.png"}}]);