(window.webpackJsonp=window.webpackJsonp||[]).push([[411],{1632:function(t,l,s){t.exports=s.p+"assets/img/11.1268ff93.png"},3399:function(t,l,s){"use strict";s.r(l);var a=s(2),r=Object(a.a)({},(function(){var t=this,l=t.$createElement,a=t._self._c||l;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"浏览器的渲染流程-即浏览器收到服务器返回的内容后是如何解析的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器的渲染流程-即浏览器收到服务器返回的内容后是如何解析的"}},[t._v("#")]),t._v(" 浏览器的渲染流程 --- 即浏览器收到服务器返回的内容后是如何解析的")]),t._v(" "),a("p",[a("img",{attrs:{src:s(1632),alt:""}})]),t._v(" "),a("ul",[a("li",[a("ol",[a("li",[t._v("浏览器无法直接使用HTML，需要将HTML字符串转化成DOM树（类似 通过浏览器打印出来的 document）。")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"2"}},[a("li",[t._v("浏览器无法解析纯文本的CSS样式，需要对CSS进行解析,解析成 CSSOM，即 CSS规则树（类似通过浏览器打印出来的 document.styleSeets）")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"3"}},[a("li",[t._v("计算出DOM树中每个节点的具体样式（Attachment）")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"4"}},[a("li",[t._v("创建渲染（布局）树，将DOM树中可见节点，添加到布局树中。并计算节点渲染到页面的坐标位置。（layout）")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"5"}},[a("li",[t._v("通过布局树，进行分层 （根据定位属性、透明属性、transform属性、clip属性等）生产图层树")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"6"}},[a("li",[t._v("将不同图层进行绘制，转交给合成线程处理。最终生产页面，并显示到浏览器上 (Painting,Display)")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("查看layer并对图层进行绘制的列表")])])])}),[],!1,null,null,null);l.default=r.exports}}]);