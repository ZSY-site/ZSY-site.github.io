(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{1886:function(t,v,_){t.exports=_.p+"assets/img/100.face4dd3.png"},1887:function(t,v,_){t.exports=_.p+"assets/img/101.df7993c7.png"},1888:function(t,v,_){t.exports=_.p+"assets/img/79.0912cf90.png"},1889:function(t,v,_){t.exports=_.p+"assets/img/80.683e5b59.png"},1890:function(t,v,_){t.exports=_.p+"assets/img/74.43dfdc71.png"},1891:function(t,v,_){t.exports=_.p+"assets/img/75.3a21c6ef.png"},1892:function(t,v,_){t.exports=_.p+"assets/img/76.2d8b721f.png"},1893:function(t,v,_){t.exports=_.p+"assets/img/77.958149fb.png"},1894:function(t,v,_){t.exports=_.p+"assets/img/78.bc78f618.png"},3503:function(t,v,_){"use strict";_.r(v);var l=_(2),i=Object(l.a)({},(function(){var t=this,v=t.$createElement,l=t._self._c||v;return l("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[l("h2",{attrs:{id:"面试题汇总"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#面试题汇总"}},[t._v("#")]),t._v(" 面试题汇总")]),t._v(" "),l("h3",{attrs:{id:"http是什么"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#http是什么"}},[t._v("#")]),t._v(" HTTP是什么")]),t._v(" "),l("ul",[l("li",[t._v("HTTP 是超文本传输协议，是一个计算机世界里 服务器与浏览器 或 服务器与服务器 之间传输 文字、图片、视频等超文本数据的规范")])]),t._v(" "),l("h3",{attrs:{id:"http常见的状态码有哪些"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#http常见的状态码有哪些"}},[t._v("#")]),t._v(" HTTP常见的状态码有哪些")]),t._v(" "),l("ul",[l("li",[t._v("1xx 表示服务端已经收到了请求，但是还需要进一步处理。")]),t._v(" "),l("li",[t._v("2xx\n"),l("ul",[l("li",[t._v("200 一切正常，客户端请求成功，服务器成功处理客户端的请求，同时成功响应数据")])])]),t._v(" "),l("li",[t._v("3xx\n"),l("ul",[l("li",[t._v("301 表示永久重定向，说明请求的资源已经不存在了，需要改新的 URL 再次访问")]),t._v(" "),l("li",[t._v("302 表示临时重定向，说明请求的资源还在，但暂时需要用另一个 URL 来访问")]),t._v(" "),l("li",[t._v("304 是对客户端有缓存情况下服务端的一种响应状态码。（一般跟协商缓存有关系）就是告诉浏览器这个资源依然有效，你直接读取你本地的缓存就行了。")])])]),t._v(" "),l("li",[t._v("4xx\n"),l("ul",[l("li",[t._v("403 表示服务器禁止访问资源，并不是客户端的请求出错")]),t._v(" "),l("li",[t._v("404 表示请求的资源在服务器上不存在或未找到")])])]),t._v(" "),l("li",[t._v("5xx\n"),l("ul",[l("li",[t._v("500 表示服务器发生了错误，导致了它无法完成对请求的处理。")])])])]),t._v(" "),l("h3",{attrs:{id:"http常见的字段有哪些"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#http常见的字段有哪些"}},[t._v("#")]),t._v(" HTTP常见的字段有哪些")]),t._v(" "),l("ul",[l("li",[t._v("Host 字段 : 客户端发送请求时，用来指定服务器的域名。也就是说可以通过 Host 字段，在同一台服务器上找到对应的网站。")]),t._v(" "),l("li",[t._v("Content-Length 字段 : 服务器在返回数据时，会有 Content-Length 字段，表明本次响应的数据长度，单位是 字节")]),t._v(" "),l("li",[t._v("Content-Type 字段 : 用于服务器响应时，告诉客户端，本次数据是什么格式")]),t._v(" "),l("li",[t._v("Content-Encoding 字段 : 表明了服务器返回的数据使用了压缩方式")]),t._v(" "),l("li",[t._v("Connection 字段 : 这个字段常用于客户端要求服务器使用 HTTP长连接 机制，以便其他请求复用\n"),l("ul",[l("li",[t._v("HTTP长连接 的特点 ： 只要任意一端没有明确提出断开连接，则保持 TCP 连接状态")])])])]),t._v(" "),l("h3",{attrs:{id:"get和post有什么区别"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#get和post有什么区别"}},[t._v("#")]),t._v(" GET和POST有什么区别")]),t._v(" "),l("ul",[l("li",[t._v("GET请求\n"),l("ul",[l("li",[t._v("是从服务器获取指定的资源。")]),t._v(" "),l("li",[t._v("它对于服务器来说是 只读 操作，所以不会破坏服务器上的资源")])])]),t._v(" "),l("li",[t._v("POST请求\n"),l("ul",[l("li",[t._v("根据请求负荷对指定的资源做出处理")]),t._v(" "),l("li",[t._v("它会修改服务器上的资源")])])])]),t._v(" "),l("h3",{attrs:{id:"http-0-9"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#http-0-9"}},[t._v("#")]),t._v(" HTTP/0.9")]),t._v(" "),l("ul",[l("li",[t._v("HTTP/0.9 在传输过程中没有请求头和请求体，服务器响应没有返回头信息，内容采用ASCII字符流来进行传输 HTML。")])]),t._v(" "),l("h3",{attrs:{id:"http-1-0"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#http-1-0"}},[t._v("#")]),t._v(" HTTP/1.0")]),t._v(" "),l("ul",[l("li",[t._v("HTTP/1.0 增加了请求头和响应头，实现多类型数据传输, 能根据header的不同来处理不同的资源。")])]),t._v(" "),l("h3",{attrs:{id:"http-1-1-的优缺点"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#http-1-1-的优缺点"}},[t._v("#")]),t._v(" HTTP/1.1 的优缺点")]),t._v(" "),l("ul",[l("li",[l("p",[t._v("优点：")]),t._v(" "),l("ul",[l("li",[l("ol",[l("li",[t._v("长连接：")])]),t._v(" "),l("ul",[l("li",[t._v("HTTP/1.0 的性能上有一个很大的问题，就是每发起一个请求，就要新建一次TCP连接（三次握手）。")]),t._v(" "),l("li",[t._v("为了解决这样的问题。HTTP/1.1 提出了长连接的通信方式，也叫持久连接。在一个TCP连接上可以传输多个HTTP请求。")]),t._v(" "),l("li",[t._v("这种方式的好处在于减少了 TCP 连接的重复建立和断开所造成的额外开销。持久连接的特点是，只要任意一端没有明确提出断开连接，则保持 TCP 连接状态。")])])]),t._v(" "),l("li",[l("ol",{attrs:{start:"2"}},[l("li",[t._v("管道网络传输 :")])]),t._v(" "),l("ul",[l("li",[t._v("即可在同一个 TCP 连接里面，客户端可以发起多个请求，只要第一个请求发出去了，不必等其回来，就可以发第二个请求出去，可以减少整体的响应时间。但是服务器在处理的时候需要按顺序依次处理请求 如果服务端在处理某个请求时耗时比较长，那么后续的请求的处理都会被阻塞住，这称为「队头堵塞」。")])])]),t._v(" "),l("li",[l("ol",{attrs:{start:"3"}},[l("li",[t._v("灵活和易于扩展，比如如下：")])]),t._v(" "),l("ul",[l("li",[t._v("HTTPS 就是在 HTTP 与 TCP 层之间增加了 SSL/TLS 安全传输层")]),t._v(" "),l("li",[t._v("HTTP/1.1 和 HTTP/2.0 传输层协议使用的是 TCP 协议，而到了 HTTP/3.0 传输协议改用了 UDP 协议")])])]),t._v(" "),l("li",[l("ol",{attrs:{start:"4"}},[l("li",[t._v("应用广泛: HTTP 的应用范围非常广泛，比如网上购物，看新闻等等")])])])])]),t._v(" "),l("li",[l("p",[t._v("缺点：")]),t._v(" "),l("ul",[l("li",[l("ol",[l("li",[t._v("无状态的 ：服务器不会去记忆HTTP的状态，那么在完成有关联的操作时，都需要验证用户身份信息")])])]),t._v(" "),l("li",[l("ol",{attrs:{start:"2"}},[l("li",[t._v("明文传输的 ：在传输的过程中信息很容易被窃取。")])])])])])]),t._v(" "),l("h3",{attrs:{id:"http-2-0"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#http-2-0"}},[t._v("#")]),t._v(" HTTP/2.0")]),t._v(" "),l("ul",[l("li",[t._v("HTTP/2 协议是基于 HTTPS 的，所以 HTTP/2 的安全性也是有保障的。")]),t._v(" "),l("li",[l("img",{attrs:{src:_(1886),alt:""}})]),t._v(" "),l("li",[t._v("那 HTTP/2 相比 HTTP/1.1 性能上的改进：\n"),l("ul",[l("li",[l("ol",[l("li",[t._v("头部压缩: HTTP/2 会压缩头（Header）如果你同时发出多个请求，他们的头是一样的或是相似的，那么，协议会帮你消除重复的部分。")])])]),t._v(" "),l("li",[l("ol",{attrs:{start:"2"}},[l("li",[t._v("二进制格式: HTTP/2 不再像 HTTP/1.1 里的纯文本形式的报文，而是全面采用了二进制格式，二进制对计算机非常友好，所以能增加了数据传输的效率。")])])])])])]),t._v(" "),l("h3",{attrs:{id:"http-3-0"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#http-3-0"}},[t._v("#")]),t._v(" HTTP/3.0")]),t._v(" "),l("ul",[l("li",[t._v("前面我们知道了 HTTP/1.1 和 HTTP/2 都有队头阻塞的问题")]),t._v(" "),l("li",[t._v("HTTP/2 队头阻塞的问题是因为 TCP，所以 HTTP/3 把 HTTP 下层的 TCP 协议改成了 UDP！")]),t._v(" "),l("li",[l("img",{attrs:{src:_(1887),alt:""}})]),t._v(" "),l("li",[t._v("UDP 发送是不管顺序，也不管丢包的，所以不会出现像 HTTP/2 队头阻塞的问题。大家都知道 UDP 是不可靠传输的，但基于 UDP 的 QUIC 协议 可以实现类似 TCP 的可靠性传输。")]),t._v(" "),l("li",[t._v("QUIC 有以下 3 个特点。\n"),l("ul",[l("li",[l("ol",[l("li",[t._v("无队头阻塞: QUIC 有自己的一套机制可以保证传输的可靠性的。当某个流发生丢包时，只会阻塞这个流，其他流不会受到影响，因此不存在队头阻塞问题。")])])])])])]),t._v(" "),l("h3",{attrs:{id:"http与https有哪些区别"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#http与https有哪些区别"}},[t._v("#")]),t._v(" HTTP与HTTPS有哪些区别")]),t._v(" "),l("ul",[l("li",[t._v("明文传输与加密传输：HTTP 是明文传输，存在安全风险的问题。HTTPS 在 TCP 和 HTTP 网络层之间加入了 SSL/TLS 安全协议，使得报文能够加密传输，解决了 HTTP 不安全的缺陷.")]),t._v(" "),l("li",[t._v("连接建立的区别：HTTP 连接建立相对简单， TCP 三次握手之后便可进行 HTTP 的报文传输。而 HTTPS 在 TCP 三次握手之后，还需进行 SSL/TLS 的握手过程，才可进入加密报文传输。")]),t._v(" "),l("li",[t._v("默认端口不一样：HTTP 默认端口号是 80，HTTPS 默认端口号是 443。")]),t._v(" "),l("li",[t._v("是否需要官方证书：HTTPS 协议需要向 CA（证书权威机构）申请数字证书，来保证服务器的身份是可信的。")])]),t._v(" "),l("h3",{attrs:{id:"https解决了http的哪些问题"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#https解决了http的哪些问题"}},[t._v("#")]),t._v(" HTTPS解决了HTTP的哪些问题")]),t._v(" "),l("p",[t._v("由于 HTTP 是明文传输的，所以存在这样几个风险：窃听风险 篡改风险 冒充风险")]),t._v(" "),l("ul",[l("li",[l("p",[t._v("HTTPS 在 HTTP 跟 TCP 层之间加入了 SSL/TLS 协议，因此就解决了如上的三个风险，具体是怎么解决的呢？？？")]),t._v(" "),l("ul",[l("li",[t._v("如何解决 窃听风险 : 使用 混合加密 的方式实现信息的机密性，因此在通信链路上的通信内容就不会被窃听")]),t._v(" "),l("li",[t._v("如何解决 篡改风险 : 使用 摘要算法 的方式来实现，就类似会给数据生成独一无二的指纹，")]),t._v(" "),l("li",[t._v("如何解决 冒充风险 : 将服务器公钥放入到 数字证书 中")])])]),t._v(" "),l("li",[l("p",[t._v("对称加密：")])]),t._v(" "),l("li",[l("p",[t._v("非对称加密：")])]),t._v(" "),l("li",[l("p",[t._v("混合加密：https采用的是 对称加密 和 非对称加密，即 混合加密。")])]),t._v(" "),l("li",[l("p",[t._v("摘要算法：")])]),t._v(" "),l("li",[l("p",[t._v("数字证书：")])])]),t._v(" "),l("h3",{attrs:{id:"tcp的三次握手"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#tcp的三次握手"}},[t._v("#")]),t._v(" TCP的三次握手")]),t._v(" "),l("p",[l("img",{attrs:{src:_(1888),alt:""}})]),t._v(" "),l("ul",[l("li",[t._v("TCP报文内有 SYN(同步) ACK(确认) FIN 等标识，如果设置为1，就开启这些标识，设置为0就关闭这些标识。")]),t._v(" "),l("li",[t._v("TCP是面向连接的协议，所以使用TCP前必须先建立连接，而建立连接就是通过三次握手来进行的。")]),t._v(" "),l("li",[t._v("三次握手的过程：\n"),l("ul",[l("li",[t._v("客户端会随机初始化 序号，将此序号置于TCP首部的序号字段中，同时把SYN标志位为1，然后把第一个SYN报文（标识客户端想要和服务端进行数据的同步）发送给服务端，表示向服务端发起连接。")]),t._v(" "),l("li",[t._v("服务端收到客户端的SYN报文后，首先服务端也会随机初始化自己的序号，将此序号填入TCP首部的序号字段中，接着把 SYN和ACK 报文发给客户端。")]),t._v(" "),l("li",[t._v("客户端收到服务端报文后，还要向服务端回应最后一个应答报文ACK，同时这个ACK报文可以携带数据到服务端。")])])]),t._v(" "),l("li",[t._v("从上面的过程中，前两次握手时不可以携带数据的，第三次握手是可以携带数据的。")]),t._v(" "),l("li",[t._v("握完手之后就建立连接，这时候客户端就可以发送http请求了，然后服务器响应内容。")])]),t._v(" "),l("h3",{attrs:{id:"为什么是三次握手-不是两次、四次"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#为什么是三次握手-不是两次、四次"}},[t._v("#")]),t._v(" 为什么是三次握手? 不是两次、四次?")]),t._v(" "),l("ul",[l("li",[t._v("三次握手才可以阻止重复历史连接的初始化（主要原因）")]),t._v(" "),l("li",[t._v("我们考虑一个场景，客户端先发送了 SYN（seq = 90） 报文，然后客户端宕机了，而且这个 SYN 报文还被网络阻塞了，服务端并没有收到，接着客户端重启后，又重新向服务端建立连接，发送了 SYN（seq = 100） 报文（注意！不是重传 SYN，重传的 SYN 的序列号是一样的）。")]),t._v(" "),l("li",[t._v("如果是在两次握手的情况下，客户端之气发送的 旧 SYN 报文到达服务端后，服务器端就发送 SYN+ACK 报文给客户端，此时服务端就认为自己已经建立好连接了，但其实此次连接是历史性连接。")]),t._v(" "),l("li",[t._v("而如果是三次握手，那么客户端收到 SYN+ACK 报文后，客户端会判断此次连接是历史连接，然后就会回RST报文断开旧连接。这样就避免了历史连接的初始化。")])]),t._v(" "),l("h3",{attrs:{id:"tcp四次挥手"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#tcp四次挥手"}},[t._v("#")]),t._v(" TCP四次挥手")]),t._v(" "),l("p",[l("img",{attrs:{src:_(1889),alt:""}})]),t._v(" "),l("ul",[l("li",[l("p",[t._v("当进行TCP三次握手后就建立连接，这时候客户端就可以发送http请求了，然后服务器响应内容。")])]),t._v(" "),l("li",[l("p",[t._v("假设双方交流完毕，那么双方就得发起关闭连接的要求了，这个过程就是4次挥手")])]),t._v(" "),l("li",[l("p",[t._v("客户端和服务端都可以主动的发起四次挥手")])]),t._v(" "),l("li",[l("p",[t._v("比如是客户端发送的四次挥手：")]),t._v(" "),l("ul",[l("li",[l("ol",[l("li",[t._v("客户端会发送一个FIN报文")])])]),t._v(" "),l("li",[l("ol",{attrs:{start:"2"}},[l("li",[t._v("服务端收到FIN报文后，就向客户端发送ACK应答报文")])])]),t._v(" "),l("li",[l("ol",{attrs:{start:"3"}},[l("li",[t._v("等待服务端处理完数据后，也向客户端发送FIN报文")])])]),t._v(" "),l("li",[l("ol",{attrs:{start:"4"}},[l("li",[t._v("客户端收到FIN报文后，会回一个ACK应答报文。服务端收到该ACK应答报文后就进入close状态，那么就完成了连接的关闭。")])])])])])]),t._v(" "),l("h3",{attrs:{id:"说一下osi七层参考模型"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#说一下osi七层参考模型"}},[t._v("#")]),t._v(" 说一下OSI七层参考模型")]),t._v(" "),l("ul",[l("li",[t._v("从上到下分为：")]),t._v(" "),l("li",[l("ol",[l("li",[t._v("应用层:")])]),t._v(" "),l("ul",[l("li",[t._v("应用层是OSI模型的最高层，是用户与网络的界面")]),t._v(" "),l("li",[t._v("用户的实际应用多种多样，应用层采用不同的协议来解决不同应用类型的需求")]),t._v(" "),l("li",[t._v("典型的协议有：文件传输协议FTP、电子邮件协议SMTP、万维网HTTP等")])])]),t._v(" "),l("li",[l("ol",{attrs:{start:"2"}},[l("li",[t._v("表示层：")])]),t._v(" "),l("ul",[l("li",[t._v("用于处理在两个通信系统中交换信息的表示方式，进行数据格式交换，数据加密解密")])])]),t._v(" "),l("li",[l("ol",{attrs:{start:"3"}},[l("li",[t._v("会话层：")])]),t._v(" "),l("ul",[l("li",[t._v("负责建立、管理会话，向表示层提供建立连接并在连接上有序地传输数据")])])]),t._v(" "),l("li",[l("ol",{attrs:{start:"4"}},[l("li",[t._v("传输层：")])]),t._v(" "),l("ul",[l("li",[t._v("负责运行在不同主机的两个进程之间的通信，")]),t._v(" "),l("li",[t._v("传输单位是报文段或用户数据报。")])])]),t._v(" "),l("li",[l("ol",{attrs:{start:"5"}},[l("li",[t._v("网络层:")])]),t._v(" "),l("ul",[l("li",[t._v("主要任务就是把分组从源端传到目的端，为分组交换网上的不同主机提供通信服务")]),t._v(" "),l("li",[t._v("网络层传输单位是数据报")])])]),t._v(" "),l("li",[l("ol",{attrs:{start:"6"}},[l("li",[t._v("数据链路层：")])]),t._v(" "),l("ul",[l("li",[t._v("主要任务就是把网络层传下来的数据包组成成帧")]),t._v(" "),l("li",[t._v("数据链路层的传输单位是帧")])])]),t._v(" "),l("li",[l("ol",{attrs:{start:"7"}},[l("li",[t._v("物理层：")])]),t._v(" "),l("ul",[l("li",[t._v("主要任务就是在物理媒体上实现比特流的透明传输。")]),t._v(" "),l("li",[t._v("物理层传输的单位是比特。")]),t._v(" "),l("li",[t._v("透明传输：指的是不管传输的是什么样的比特组合，都应当能够在链路上传输。")])])])]),t._v(" "),l("h3",{attrs:{id:"说一下tcp-ip网络模型"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#说一下tcp-ip网络模型"}},[t._v("#")]),t._v(" 说一下TCP/IP网络模型")]),t._v(" "),l("ul",[l("li",[t._v("TCP/IP网络层模型【从上到下】分为如下几层：\n"),l("ul",[l("li",[l("p",[t._v("应用层:")]),t._v(" "),l("ul",[l("li",[t._v("我们能直接接触到的就是应用层（Application Layer），我们电脑或手机使用的应用软件都是在应用层实现。")]),t._v(" "),l("li",[t._v("当两个不同设备的应用需要通信的时候，应用就把应用数据传给下一层，也就是传输层。")]),t._v(" "),l("li",[t._v("应用层是不用去关心数据是如何传输的，就类似于，我们寄快递的时候，只需要把包裹交给快递员，由他负责运输快递，我们不需要关心快递是如何被运输的。")])])]),t._v(" "),l("li",[l("p",[t._v("运输层：")]),t._v(" "),l("ul",[l("li",[t._v("应用层的数据包会传给传输层，传输层（Transport Layer）是为应用层提供网络支持的。它只要服务好应用层即可，让其作为应用间数据传输的媒介，而实际的传输功能就交给下一层，即网络层。")]),t._v(" "),l("li",[l("img",{attrs:{src:_(1890),alt:""}})]),t._v(" "),l("li",[t._v("在传输层会有两个传输协议，分别是 TCP(传输控制协议) 和 UDP。")]),t._v(" "),l("li",[t._v("TCP 相比 UDP 多了很多特性，比如流量控制、超时重传、拥塞控制等，这些都是为了保证数据包能可靠地传输给对方。")]),t._v(" "),l("li",[t._v("UDP 相对来说就很简单，简单到只负责发送数据包，不保证数据包是否能抵达对方，但它实时性相对更好，传输效率也高。")])])]),t._v(" "),l("li",[l("p",[t._v("网络层：")]),t._v(" "),l("ul",[l("li",[l("img",{attrs:{src:_(1891),alt:""}})]),t._v(" "),l("li",[t._v("网络层最常使用的是 IP 协议（Internet Protocol），IP 协议会将传输层的报文作为数据部分，再加上 IP 包头组装成 IP 报文，如果 IP 报文大小超过 MTU（以太网中一般为 1500 字节）就会再次进行分片，得到一个即将发送到网络的 IP 报文。")]),t._v(" "),l("li",[l("img",{attrs:{src:_(1892),alt:""}})]),t._v(" "),l("li",[t._v("网络层负责将数据从一个设备传输到另一个设备")])])]),t._v(" "),l("li",[l("p",[t._v("网络接口层：")]),t._v(" "),l("ul",[l("li",[t._v("生成了 IP 头部之后，接下来要交给网络接口层（Link Layer）在 IP 头部的前面加上 MAC 头部，并封装成数据帧（Data frame）发送到网络上。")]),t._v(" "),l("li",[l("img",{attrs:{src:_(1893),alt:""}})])])])])])]),t._v(" "),l("blockquote",[l("p",[t._v("每一层的封装格式")])]),t._v(" "),l("ul",[l("li",[l("img",{attrs:{src:_(1894),alt:""}})]),t._v(" "),l("li",[t._v("网络接口层的传输单位是帧（frame），IP 层的传输单位是包（packet），TCP 层的传输单位是段（segment），HTTP 的传输单位则是消息或报文（message）。但这些名词并没有什么本质的区分，可以统称为数据包。")])]),t._v(" "),l("h3",{attrs:{id:"说一下osi五层模型"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#说一下osi五层模型"}},[t._v("#")]),t._v(" 说一下OSI五层模型")]),t._v(" "),l("ul",[l("li",[t._v("从上到下分为：")]),t._v(" "),l("li",[l("ol",[l("li",[t._v("应用层:")])]),t._v(" "),l("ul",[l("li",[t._v("应用层是OSI模型的最高层，是用户与网络的界面")]),t._v(" "),l("li",[t._v("用户的实际应用多种多样，应用层采用不同的协议来解决不同应用类型的需求")]),t._v(" "),l("li",[t._v("典型的协议有：文件传输协议FTP、电子邮件协议SMTP、万维网HTTP等")])])]),t._v(" "),l("li",[l("ol",{attrs:{start:"2"}},[l("li",[t._v("传输层：")])]),t._v(" "),l("ul",[l("li",[t._v("负责运行在不同主机的两个进程之间的通信，")]),t._v(" "),l("li",[t._v("传输单位是报文段或用户数据报。")])])]),t._v(" "),l("li",[l("ol",{attrs:{start:"3"}},[l("li",[t._v("网络层:")])]),t._v(" "),l("ul",[l("li",[t._v("主要任务就是把分组从源端传到目的端，为分组交换网上的不同主机提供通信服务")]),t._v(" "),l("li",[t._v("网络层传输单位是数据报")])])]),t._v(" "),l("li",[l("ol",{attrs:{start:"4"}},[l("li",[t._v("数据链路层：")])]),t._v(" "),l("ul",[l("li",[t._v("主要任务就是把网络层传下来的数据包组成成帧")]),t._v(" "),l("li",[t._v("数据链路层的传输单位是帧")])])]),t._v(" "),l("li",[l("ol",{attrs:{start:"5"}},[l("li",[t._v("物理层：")])]),t._v(" "),l("ul",[l("li",[t._v("主要任务就是在物理媒体上实现比特流的透明传输。")]),t._v(" "),l("li",[t._v("物理层传输的单位是比特。")]),t._v(" "),l("li",[t._v("透明传输：指的是不管传输的是什么样的比特组合，都应当能够在链路上传输。")])])])])])}),[],!1,null,null,null);v.default=i.exports}}]);