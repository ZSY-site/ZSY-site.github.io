(window.webpackJsonp=window.webpackJsonp||[]).push([[473],{2158:function(t,a,l){"use strict";l.r(a);var v=l(2),_=Object(v.a)({},(function(){var t=this,a=t.$createElement,l=t._self._c||a;return l("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[l("h2",{attrs:{id:"面试题汇总"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#面试题汇总"}},[t._v("#")]),t._v(" 面试题汇总")]),t._v(" "),l("h3",{attrs:{id:"谈谈你对ajax的理解"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#谈谈你对ajax的理解"}},[t._v("#")]),t._v(" 谈谈你对ajax的理解")]),t._v(" "),l("ul",[l("li",[l("p",[t._v("是什么？ ajax是一种异步通信的方法，通过AJAX可以在浏览器中向服务器发送异步请求，然后根据服务器返回的数据，更新网页的相应部分，而不用刷新整个页面的一种方法。")])]),t._v(" "),l("li",[l("p",[t._v("能干什么？干的怎么样？")])])]),t._v(" "),l("blockquote",[l("p",[t._v("创建一个ajax的步骤：")])]),t._v(" "),l("ul",[l("li",[l("ol",[l("li",[t._v("首先是通过new XMLHttpRequest(), 实例化一个xhr实例对象。")])])]),t._v(" "),l("li",[l("ol",{attrs:{start:"2"}},[l("li",[t._v("然后给xhr绑定一个名为onreadystatechange事件监听，xhr对象本身有5种状态：")])]),t._v(" "),l("ul",[l("li",[t._v("状态0: xhr对象在实例化出来的那一刻，就已经是0状态，代表着xhr是初始化状态。")]),t._v(" "),l("li",[t._v("状态1: send方法还没有被调用，即：请求没有发出去，此时依然可以修改请求头。")]),t._v(" "),l("li",[t._v("状态2: send方法被调用了，即：请求已经发出去了，此时已经不可以再修改请求头。")]),t._v(" "),l("li",[t._v("状态3: 已经回来一部分数据了，如果是比较小的数据，会在此阶段一次性接收完毕,较大数据，有待于进一步接收。")]),t._v(" "),l("li",[t._v("状态4: 数据完美的回来了。")])])]),t._v(" "),l("li",[l("ol",{attrs:{start:"3"}},[l("li",[t._v("调用实例对象xhr的open方法，把相应的请求方法，请求地址作为参数传入。")])])]),t._v(" "),l("li",[l("ol",{attrs:{start:"4"}},[l("li",[t._v("调用send方法，向服务器发起请求。")])])]),t._v(" "),l("li",[l("p",[t._v("如何干的？工作原理？")]),t._v(" "),l("ul",[l("li",[t._v("Ajax的工作原理相当于在客户端和服务器之间加了一个中间层(Ajax引擎)，使用户操作与服务器响应异步化。")]),t._v(" "),l("li",[t._v("当前端在 63348 端口，而服务器端端口号是 3000，那么在 63348 页面向服务器发送请求会产生跨域问题，因为会被ajax引擎拦截住")])])])])])}),[],!1,null,null,null);a.default=_.exports}}]);