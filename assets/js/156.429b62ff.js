(window.webpackJsonp=window.webpackJsonp||[]).push([[156],{2204:function(s,r,n){"use strict";n.r(r);var e=n(2),t=Object(e.a)({},(function(){var s=this,r=s.$createElement,e=s._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"doris-概述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#doris-概述"}},[s._v("#")]),s._v(" Doris 概述")]),s._v(" "),e("p",[s._v("Apache Doris 由百度大数据部研发（之前叫百度 Palo，2018 年贡献到 Apache 社区后，\n更名为 Doris ），在百度内部，有超过 200 个产品线在使用，部署机器超过 1000 台，单一\n业务最大可达到上百 TB。\nApache Doris 是一个现代化的 MPP（Massively Parallel Processing，即大规模并行处理）\n分析型数据库产品。仅需亚秒级响应时间即可获得查询结果，有效地支持实时数据分析。\nApache Doris 的分布式架构非常简洁，易于运维，并且可以支持 10PB 以上的超大数据集。\nApache Doris 可以满足多种数据分析需求，例如固定历史报表，实时数据分析，交互式\n数据分析和探索式数据分析等。")]),s._v(" "),e("p",[e("img",{attrs:{src:n(628),alt:""}})]),s._v(" "),e("p",[e("img",{attrs:{src:n(629),alt:""}})]),s._v(" "),e("h2",{attrs:{id:"doris-架构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#doris-架构"}},[s._v("#")]),s._v(" Doris 架构")]),s._v(" "),e("p",[e("img",{attrs:{src:n(630),alt:""}})]),s._v(" "),e("p",[s._v("Doris 的架构很简洁，只设 FE(Frontend)、BE(Backend)两种角色、两个进程，不依赖于\n外部组件，方便部署和运维，FE、BE 都可线性扩展。\n⚫ FE（Frontend）：存储、维护集群元数据；负责接收、解析查询请求，规划查询计划，\n调度查询执行，返回查询结果。主要有三个角色：\n（1）Leader 和 Follower：主要是用来达到元数据的高可用，保证单节点宕机的情况下，\n元数据能够实时地在线恢复，而不影响整个服务。\n（2）Observer：用来扩展查询节点，同时起到元数据备份的作用。如果在发现集群压力\n非常大的情况下，需要去扩展整个查询的能力，那么可以加 observer 的节点。observer 不\n参与任何的写入，只参与读取。\n⚫ BE（Backend）：负责物理数据的存储和计算；依据 FE 生成的物理计划，分布式地执\n行查询。\n数据的可靠性由 BE 保证，BE 会对整个数据存储多副本或者是三副本。副本数可根据\n需求动态调整。\n⚫ MySQL Client\nDoris 借助 MySQL 协议，用户使用任意 MySQL 的 ODBC/JDBC 以及 MySQL 的客户\n端，都可以直接访问 Doris。\n⚫ Broker\nBroker 为一个独立的无状态进程。封装了文件系统接口，提供 Doris 读取远端存储系统\n中文件的能力，包括 HDFS，S3，BOS 等。")])])}),[],!1,null,null,null);r.default=t.exports},628:function(s,r,n){s.exports=n.p+"assets/img/1.af97f75c.png"},629:function(s,r,n){s.exports=n.p+"assets/img/2.0ebfc811.png"},630:function(s,r,n){s.exports=n.p+"assets/img/3.dc65ea3f.png"}}]);